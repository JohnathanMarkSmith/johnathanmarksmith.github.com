<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Johnathan Mark Smith</title>
 <link href="http://johnathanmarksmith.com/" rel="self"/>
 <link href="http://johnathanmarksmith.com"/>
 <updated>2014-12-09T07:30:47-07:00</updated>
 <id>http://johnathanmarksmith.com</id>
 <author>
   <name>Johnathan Mark Smith</name>
   <email>johnathansmith1969@gmail.com</email>
 </author>

 
 <entry>
   <title>How to list Git branches in most recent committed order</title>
   <link href="http://johnathanmarksmith.com/git/github/2014/12/09/how-to-list-git-branches-in-most-recent-committed-order"/>
   <updated>2014-12-09T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/github/2014/12/09/how-to-list-git-branches-in-most-recent-committed-order</id>
   <content type="html">&lt;p&gt;I been getting asked a lot on how to find the most updated branch in Git.   Below I am going to show you 3 commands that will help you.&lt;/p&gt;

&lt;h3 id=&quot;lets-get-to-the-commands&quot;&gt;Lets Get To The Commands&lt;/h3&gt;

&lt;p&gt;This first command is only going to show you the commits and the order of them&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;-each-ref --sort&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-committerdate refs/heads/
4afeb5072c9667b4aef6d5c4fe17ae686b83fbd8 commit refs/heads/master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This command is better it will show you the branch, date of commit and author&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;-each-ref --sort&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-committerdate refs/heads/ --format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%(refname) %(committerdate) %(authorname)&amp;#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt; sed &lt;span class=&quot;s1&quot;&gt;&amp;#39;s/refs\/heads\///g&amp;#39;&lt;/span&gt;
master Thu Oct &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt; 08:56:32 &lt;span class=&quot;m&quot;&gt;2014&lt;/span&gt; -0700 Johnathan Mark Smith&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now for the command I like the best, This one will show you the date, author and then the branch&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;-each-ref --sort&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;-committerdate refs/heads/ --format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;%(committerdate:short) %(authorname) %(refname:short)&amp;#39;&lt;/span&gt;
2014-10-02 Johnathan Mark Smith master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to backup your linux dot files using Git</title>
   <link href="http://johnathanmarksmith.com/linux/mint/git/github/backup/2014/11/21/how-to-backup-your-linux-dot-files-using-git"/>
   <updated>2014-11-21T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mint/git/github/backup/2014/11/21/how-to-backup-your-linux-dot-files-using-git</id>
   <content type="html">&lt;p&gt;As you may or may not know that I love working on a Linux OS and I also love working with Git so why not use them both in a blog post??  &lt;/p&gt;

&lt;p&gt;What can I do with Linux and Git that I have not seen anywhere else?  &lt;/p&gt;

&lt;p&gt;I got it! How about how to backup your Linux dot files like “.bash_profile” using Git and putting them on github so If I move to a new Linux workstation I can just do a pull of all my files..&lt;/p&gt;

&lt;h3 id=&quot;clone-my-project-to-start&quot;&gt;Clone My Project to Start&lt;/h3&gt;

&lt;p&gt;so the first thing we are going to do is to clone my dot files project and move them into a folder called dotfiles&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Documents
mkdir dotfiles
git clone git@github.com:JohnathanMarkSmith/mintdotfiles.git
cp mintdotfiles/* dotfiles&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No after you do that you should copy all your dot files into the same folder&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;cp ~/.bash_profile ~/Documents/dotfiles/bash_profle
cp ~/.bashrc ~/Documents/dotfiles/bashrc
cp ~/.gitconfig ~/Documents/dotfiles/gitconfig
cp ~/.gitignore ~/Documents/dotfiles/gitignore
cp ~/.vimrc ~/Documents/dotfiles/vimrc&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No lets change the file rights and run the scripte&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/Documents/dotfiles
chmod +x makesymlinks.sh
./makesymlinks.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you need to go into github or bitbucket and create a new repository, once you created one on the server you then use the following commands to setup your local repository and push it to the server&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git init
git add --all
git commit -am &lt;span class=&quot;s2&quot;&gt;&amp;quot;first time load&amp;quot;&lt;/span&gt;
git remote add origin ssh://newhost.com/usr/local/gitroot/myproject.git
git push -u origin master&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;No you have a backup of all your dot linux files and you can all ways update your backup.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Jekyll on Linux Mint</title>
   <link href="http://johnathanmarksmith.com/linux/mint/linuxmint/jekyll/2014/11/18/how-to-install-jekyll-on-linux-mint"/>
   <updated>2014-11-18T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mint/linuxmint/jekyll/2014/11/18/how-to-install-jekyll-on-linux-mint</id>
   <content type="html">&lt;p&gt;I found using Jekyll for websites and blogging is great but sometimes its not so easy getting your OS up and running with it.  &lt;/p&gt;

&lt;p&gt;Linux Mint makes it very easy to work with.  All you have to do is install ruby, rake, jekyll, nodejs and you are all ready to blog, Some OS’s dont make it easy to get everything install but with Linux Mint it is very easy all you have to do is following the 3 commands below.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install ruby ruby-dev make rake
sudo gem install jekyll --no-rdoc --no-ri
sudo apt-get install nodejs&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After doing the install you are all ready to start to use jekyll on Linux Mint.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/twe5XkLGsUU?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/twe5XkLGsUU?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Maven 3.2.3 on Linux Mint</title>
   <link href="http://johnathanmarksmith.com/linux/linux%20mint/mint/java/maven/programming/project%20management/2014/11/17/how-to-install-maven-323-on-linux-mint"/>
   <updated>2014-11-17T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/linux%20mint/mint/java/maven/programming/project%20management/2014/11/17/how-to-install-maven-323-on-linux-mint</id>
   <content type="html">&lt;p&gt;If you are using Linux Mint sometimes the package manager does not have the package for the product you would like to install and Maven is one of them at the time of me writing this blog.  So lets do the install on Linux Mint.&lt;/p&gt;

&lt;p&gt;I am going to show you how I install Maven 3.2.3 on Linux Mint you can do it the same way or find a better way.&lt;/p&gt;

&lt;h3 id=&quot;download-maven-and-untar-it&quot;&gt;Download Maven and untar it.&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is to download the Maven tar file and untar it to a shared location on the workstation&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://mirrors.gigenet.com/apache/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz
su -c &lt;span class=&quot;err&quot;&gt;&amp;quot;&lt;/span&gt;tar -zxvf apache-maven-3.2.3-bin.tar.gz -C /usr/local 
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local
sudo ln -s apache-maven-3.2.3 maven&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;setup-the-maven-environment-variables-in-shared-profile&quot;&gt;Setup the Maven Environment Variables in shared profile.&lt;/h3&gt;

&lt;p&gt;The next step is to setup the Maven environment variables in a shared profile so all users on the system will get them import at login time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;su -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;vi /etc/profile.d/maven.sh&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Add the following lines to maven.sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/maven
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2_HOME&lt;/span&gt;/bin
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;now-test-your-install-of-maven&quot;&gt;Now test your install of Maven.&lt;/h3&gt;

&lt;p&gt;Logout of the system and then log back into it. Enter the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn -version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with maven.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/5TvTwH8q2EI?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/5TvTwH8q2EI?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to Enable SSH on Mint</title>
   <link href="http://johnathanmarksmith.com/linux/mint/linuxmint/ssh/2014/11/17/how-to-enable-ssh-on-mint"/>
   <updated>2014-11-17T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mint/linuxmint/ssh/2014/11/17/how-to-enable-ssh-on-mint</id>
   <content type="html">&lt;p&gt;I been getting a number of emails from people that do not know how to enable SSH on Linux Mint systems, so I decided to make this post.&lt;/p&gt;

&lt;p&gt;To enable SSH (secure shell) on Linux Mint all you have to do is install the SSH package which is openssh-server&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get update
sudo apt-get install openssh-server&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After doing the install you can test that it works by connecting to the localhost &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh 127.0.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/z4Ci9NX_ej8?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/z4Ci9NX_ej8?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install PHP5 on CentOS7</title>
   <link href="http://johnathanmarksmith.com/linux/php5/centos7/2014/11/03/how-to-install-php5-on-centos7"/>
   <updated>2014-11-03T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/php5/centos7/2014/11/03/how-to-install-php5-on-centos7</id>
   <content type="html">&lt;p&gt;CentOS 7 ships with PHP5 so it is directly avaliable as a CentOS 7 package. So we can install it just like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo yum install php&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default PHP5 should be installed&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install MariaDB on CentOS7</title>
   <link href="http://johnathanmarksmith.com/linux/mariadb/mysql/centos7/rhel7/2014/10/16/how-to-install-mariadb-on-centos7"/>
   <updated>2014-10-16T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mariadb/mysql/centos7/rhel7/2014/10/16/how-to-install-mariadb-on-centos7</id>
   <content type="html">&lt;p&gt;Centos 7 comes with MariaDB instead of MySQL. MariaDB is a open source equivalent to MySQL and I am going to show you how to install it right now. &lt;/p&gt;

&lt;p&gt;If you must have MySQL you need to add the mysql-community repo by using the following command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and then you can install MySQL like you normally…&lt;/p&gt;

&lt;p&gt;Now let me show you how to install MariaDB on CentOS7. The first step is to install the MariaDB server and client&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo yum -y install mariadb-server mariadb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After running the above command we need to start the MariaDB server and enable it in systemd&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo systemctl start mariadb.service
sudo systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;mariadb.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that MariaDB server is enable and running you need to run the install script. Run the following command and anwser the questions&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo mysql_secure_installation&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that you did everything you are all done… you can now login to the MariaDB server by using the client command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mysql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with MariaDB on CentOS7.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube-nocookie.com/v/ZTxYgPahmUU?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube-nocookie.com/v/ZTxYgPahmUU?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Adobe Flash Player on CentOS7</title>
   <link href="http://johnathanmarksmith.com/linux/flash/centos7/rhel7/2014/10/14/how-to-install-adobe-flash-player-on-centos7"/>
   <updated>2014-10-14T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/flash/centos7/rhel7/2014/10/14/how-to-install-adobe-flash-player-on-centos7</id>
   <content type="html">&lt;p&gt;In this post I am going to show you how to install the Adobe Flash player on CentOS7 and RHEL7.&lt;/p&gt;

&lt;p&gt;Adobe provided yum repository that contains RPM packages of Adobe Linux Software. &lt;/p&gt;

&lt;p&gt;You use yum command to install either 32 or 64 bit flash player on a CentOS7 Linux operating system.&lt;/p&gt;

&lt;h3 id=&quot;adding-adobe-repository-to-yum-and-insall&quot;&gt;Adding Adobe repository to Yum and Insall&lt;/h3&gt;
&lt;p&gt;To add the adobe repository to Yum you have to enter the following command.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rpm -ivh http://linuxdownload.adobe.com/adobe-release/adobe-release-x86_64-1.0-1.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After you add the repositor to yum you need to run the install command to now install the flash-plugin&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install flash-plugin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that everything is installed you need to test it!&lt;/p&gt;

&lt;p&gt;Open Firefox and type the following URL:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;about:plugins&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with Flash on CentOS7 now.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install MongoDB server on CentOS7 and RHEL7</title>
   <link href="http://johnathanmarksmith.com/linux/mongodb/centos7/rhel7/2014/10/13/how-to-install-mongodb-on-centos7"/>
   <updated>2014-10-13T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mongodb/centos7/rhel7/2014/10/13/how-to-install-mongodb-on-centos7</id>
   <content type="html">&lt;p&gt;So I am going to show you how to install MongoDB on CentOS7 and RHEL7 today.&lt;/p&gt;

&lt;p&gt;First thing we need to do is to add the MongoDB repo to yum.&lt;/p&gt;

&lt;h3 id=&quot;adding-mongodb-repo-to-yum&quot;&gt;Adding MongoDB repo to Yum&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;vim /etc/yum.repos.d/mongodb.repo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next insert the following lines into the repo file you just created.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mongodb&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MongoDB repo
&lt;span class=&quot;nv&quot;&gt;baseurl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
&lt;span class=&quot;nv&quot;&gt;gpgcheck&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0
&lt;span class=&quot;nv&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;After you saved the file with the repo information you will need to install the MongoDB packages using yum.&lt;/p&gt;

&lt;h3 id=&quot;installing-mongodb-packages&quot;&gt;Installing MongoDB packages&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install mongodb-org&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that you have MongoDB packages installed you will need to start the MongoDB service using systemd.&lt;/p&gt;

&lt;h3 id=&quot;starting-mongodb-server&quot;&gt;Starting MongoDB Server&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo systemctl start mongod.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now lets check to see if MongoDB is running and also open up the firewall so we can access it.&lt;/p&gt;

&lt;h3 id=&quot;checking-to-see-if-mongodb-is-running&quot;&gt;Checking to see if mongoDB is running&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ps -ef  &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;  grep   mongo&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;opening-up-the-ports-on-the-firewall&quot;&gt;Opening up the ports on the firewall&lt;/h3&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo firewall-cmd --zone&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;public --add-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;27017/tcp --permanent
sudo firewall-cmd --reload&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with MongoDB.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube-nocookie.com/v/m22E2x1c2I0?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube-nocookie.com/v/m22E2x1c2I0?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>How to disable firewalld on CentOS7 and RHEL7 By Johnathan Mark Smith</title>
   <link href="http://johnathanmarksmith.com/linux/firewalld/centos7/rhel7/2014/10/10/how-to-disable-firewalld-on-centos7"/>
   <updated>2014-10-10T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/firewalld/centos7/rhel7/2014/10/10/how-to-disable-firewalld-on-centos7</id>
   <content type="html">&lt;p&gt;CentOS7 and RHEL7 use Firewalld which is a bit complicated so I am going to show you how to disable it.&lt;/p&gt;

&lt;h3 id=&quot;how-to-stop-and-disable-firewalld&quot;&gt;How to stop and disable firewalld&lt;/h3&gt;

&lt;p&gt;The following two commands will first disable firewalld and then stop it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo systemctl mask firewalld
sudo systemctl stop firewalld&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats it so you box now has NO firewalld running.. you should maybe think about iptables.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Apache2 on CentOS7</title>
   <link href="http://johnathanmarksmith.com/linux/apache2/centos7/2014/10/09/how-to-install-apache2-on-centos7"/>
   <updated>2014-10-09T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/apache2/centos7/2014/10/09/how-to-install-apache2-on-centos7</id>
   <content type="html">&lt;p&gt;CentOS 7 ships with Apache 2.4 so it is directly avaliable as a CentOS 7 package. So we can install it just like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo yum install httpd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By default apache should be installed, if not then install it as shown above&lt;/p&gt;

&lt;h3 id=&quot;configure-your-system-to-start-apache-on-boot&quot;&gt;Configure your system to start Apache on boot&lt;/h3&gt;

&lt;p&gt;Now lets configure your system to start apache on boot&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo systemctl start httpd.service
sudo systemctl &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;httpd.service&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now direct your browser to http://127.0.0.1 and you should see the apache2 home page&lt;/p&gt;

&lt;p&gt;Now that’s it. have fun with Apache2.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/Box8TnzRKjA?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/Box8TnzRKjA?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Maven 3.2.3 on CentOS7</title>
   <link href="http://johnathanmarksmith.com/linux/centos7/java/maven/programming/project%20management/2014/10/08/how-to-install-maven-323-on-centos7"/>
   <updated>2014-10-08T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/centos7/java/maven/programming/project%20management/2014/10/08/how-to-install-maven-323-on-centos7</id>
   <content type="html">&lt;p&gt;If you are using Fedora, CentOS, Red Hat or Scientific Linux sometimes yum does not have the package for the product you would like to install and Maven is one of them at the time of me writing this blog.  So lets do the install on CentOS7.&lt;/p&gt;

&lt;p&gt;I am going to show you how I install Maven 3.2.3 on Fedora, CentOS, Red Hat or Scientific Linux you can do it the same way or find a better way.&lt;/p&gt;

&lt;h3 id=&quot;download-maven-and-untar-it&quot;&gt;Download Maven and untar it.&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is to download the Maven tar file and untar it to a shared location on the workstation&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://mirrors.gigenet.com/apache/maven/maven-3/3.2.3/binaries/apache-maven-3.2.3-bin.tar.gz
su -c &lt;span class=&quot;err&quot;&gt;&amp;quot;&lt;/span&gt;tar -zxvf apache-maven-3.2.3-bin.tar.gz -C /usr/local��� 
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local
sudo ln -s apache-maven-3.2.3 maven&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;setup-the-maven-environment-variables-in-shared-profile&quot;&gt;Setup the Maven Environment Variables in shared profile.&lt;/h3&gt;

&lt;p&gt;The next step is to setup the Maven environment variables in a shared profile so all users on the system will get them import at login time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;su -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;vi /etc/profile.d/maven.sh&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Add the following lines to maven.sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/maven
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2_HOME&lt;/span&gt;/bin
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;now-test-your-install-of-maven&quot;&gt;Now test your install of Maven.&lt;/h3&gt;

&lt;p&gt;Logout of the system and then log back into it. Enter the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn -version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with maven.&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/5TvTwH8q2EI?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/5TvTwH8q2EI?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How I use Git with my projects</title>
   <link href="http://johnathanmarksmith.com/git/2014/02/26/how-i-use-git-with-my-projects"/>
   <updated>2014-02-26T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/2014/02/26/how-i-use-git-with-my-projects</id>
   <content type="html">&lt;p&gt;This post is a copy of the guide I give to new programmers on my project.  This is only a guide on how I like to work with git and my project. You may have a better way.  If you like this guide just change ProjectX to your project name and you can use it&lt;/p&gt;

&lt;h1 id=&quot;using-git-with-projectx&quot;&gt;Using Git with ProjectX&lt;/h1&gt;

&lt;p&gt;This document is going to give you the basic commands you need to develop code for the ProjectX product using git SCM.&lt;/p&gt;

&lt;h1 id=&quot;overview-of-the-branches-in-the-central-repository&quot;&gt;Overview of the branches in the central repository&lt;/h1&gt;
&lt;p&gt;At the core, the development model is greatly inspired by existing models out there. The central repo holds two main branches with an infinite lifetime:&lt;/p&gt;

&lt;p&gt;master
develop&lt;/p&gt;

&lt;p&gt;The master branch at origin should be familiar to every Git user. Parallel to the master branch, another branch exists called develop.&lt;/p&gt;

&lt;p&gt;We consider origin/master to be the main branch where the source code of HEAD always reflects a production-ready state.
We consider origin/develop to be the main branch where the source code of HEAD always reflects a state with the latest delivered development changes for the next release. Some would call this the “integration branch”. This is where any automatic nightly builds are built from. &lt;/p&gt;

&lt;p&gt;When the source code in the develop branch reaches a stable point and is ready to be released, all of the changes should be merged back into master somehow and then tagged with a release number. How this is done in detail will be discussed further on.&lt;/p&gt;

&lt;p&gt;Therefore, each time when changes are merged back into master, this is a new production release by definition. We tend to be very strict at this, so that theoretically, we could use a Git hook script to automatically build and roll-out our software to our production servers every time there was a commit on master.&lt;/p&gt;

&lt;h2 id=&quot;the-different-types-of-branches-we-may-use-are&quot;&gt;The different types of branches we may use are:&lt;/h2&gt;
&lt;p&gt;Feature / Fix branches
Release branches
Hotfix branches&lt;/p&gt;

&lt;p&gt;Each of these branches have a specific purpose and are bound to strict rules as to which branches may be their originating branch and which branches must be their merge targets. We will walk through them in a minute.&lt;/p&gt;

&lt;p&gt;By no means are these branches “special” from a technical perspective. The branch types are categorized by how we use them. They are of course plain old Git branches.&lt;/p&gt;

&lt;p&gt;Before you keep reading please keep in mind that no one should merge code into the master branch but the lead developer on the project…&lt;/p&gt;

&lt;h1 id=&quot;feature--fix-branches&quot;&gt;Feature / Fix branches&lt;/h1&gt;

&lt;p&gt;May branch off from: develop
Must merge back into: develop
Branch naming convention: anything except master, develop, release-x, or hotfix-x&lt;/p&gt;

&lt;p&gt;Feature branches (or sometimes called topic branches) are used to develop new features for the upcoming or a distant future release. When starting development of a feature or fix, the target release in which this feature will be incorporated may well be unknown at that point. The essence of a feature branch is that it exists as long as the feature is in development, but will eventually be merged back into develop (to definitely add the new feature to the upcoming release) or discarded (in case of a disappointing experiment).&lt;/p&gt;

&lt;p&gt;Feature branches typically exist in developer repos only, not in origin.&lt;/p&gt;

&lt;p&gt;If you are working on an issue you should name the branch the same as the TIMS ticket so we know what bug this branch addressed.&lt;/p&gt;

&lt;h1 id=&quot;creating-a-feature--fix-branch&quot;&gt;Creating a feature / fix branch&lt;/h1&gt;

&lt;p&gt;When starting work on a new feature or fix, branch off from the develop branch.
	$ git checkout -b myfeature develop&lt;/p&gt;

&lt;h1 id=&quot;incorporating-a-finished-feature--fix-on-develop&quot;&gt;Incorporating a finished feature / fix on develop&lt;/h1&gt;

&lt;p&gt;Finished features may be merged into the develop branch definitely add them to the upcoming
release once QA has tested it and has signed off:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout develop
$ git merge --no-ff myfeature

$ git branch -d myfeature
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NEVER PUSH YOUR CODE TO THE CENTRAL REPOSITORY UNTIL QA SIGNED OFF AND TESTED YOUR CHANGE!!!!!!&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git push origin develop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The –no-ff flag causes the merge to always create a new commit object, even if the merge could be performed with a fast-forward.&lt;/p&gt;

&lt;p&gt;This avoids losing information about the historical existence of a feature branch and groups together all commits that together added the feature.&lt;/p&gt;

&lt;p&gt;In the latter case, it is impossible to see from the Git history which of the commit objects together have implemented a feature—you would have to manually read all the log messages.&lt;/p&gt;

&lt;p&gt;Reverting a whole feature (i.e. a group of commits), is a true headache in the latter situation, whereas it is easily done if the –no-ff flag was used.&lt;/p&gt;

&lt;p&gt;Yes, it will create a few more (empty) commit objects, but the gain is much bigger that that cost. Unfortunately, I have not found a way to make –no-ff the default behaviour of git merge yet, but it really should be.&lt;/p&gt;

&lt;h1 id=&quot;release-branches&quot;&gt;Release branches&lt;/h1&gt;

&lt;p&gt;May branch off from: develop
Must merge back into: develop and master
Branch naming convention: release-v&lt;/p&gt;

&lt;p&gt;Release branches support preparation of a new production release. They allow for last-minute dotting of i’s and crossing t’s. Furthermore, they allow for minor bug fixes and preparing metadata for a release (version number, build dates, etc.). By doing all of this work on a release branch, the develop branch is cleared to receive features for the next big release.&lt;/p&gt;

&lt;p&gt;The key moment to branch off a new release branch from develop is when develop (almost) reflects the desired state of the new release. At least all features that are targeted for the release-to-be-built must be merged in to develop at this point in time. All features targeted at future releases may not—they must wait until after the release branch is branched off.&lt;/p&gt;

&lt;p&gt;It is exactly at the start of a release branch that the upcoming release gets assigned a version number—not any earlier. Up until that moment, the develop branch reflected changes for the “next release”, but it is unclear whether that “next release” will eventually become 0.3 or 1.0, until the release branch is started. That decision is made on the start of the release branch and is carried out by the project’s rules on version number bumping.&lt;/p&gt;

&lt;h1 id=&quot;creating-a-release-branch&quot;&gt;Creating a release branch&lt;/h1&gt;

&lt;p&gt;Release branches are created from the develop branch. For example, say version 1.1.5 is the current production release and we have a big release coming up. The state of develop is ready for the “next release” and we have decided that this will become version 1.2 (rather than 1.1.6 or 2.0). So we branch off and give the release branch a name reflecting the new version number:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b release-v1.2 develop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Modify some files?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -a -m &quot;Bumped version number to 1.2&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After creating a new branch and switching to it, we bump the version number. Here we make some changes to some files in the working copy to reflect the new version. (This can of course be a manual change—the point being that some files change.) ?&lt;/p&gt;

&lt;p&gt;This new branch may exist there for a while, until the release may be rolled out definitely. During that time, bug fixes may be applied in this branch (rather than on the develop branch). Adding large new features here is strictly prohibited. They must be merged into develop, and therefore, wait for the next big release.&lt;/p&gt;

&lt;h1 id=&quot;finishing-a-release-branch&quot;&gt;Finishing a release branch&lt;/h1&gt;

&lt;p&gt;When the state of the release branch is ready to become a real release, some actions need to be carried out. First, the release branch is merged into master (since every commit on master is a new release by definition, remember). Next, that commit on master must be tagged for easy future reference to this historical version. Finally, the changes made on the release branch need to be merged back into develop, so that future releases also contain these bug fixes.&lt;/p&gt;

&lt;p&gt;The first two steps in Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout master
$ git merge --no-ff release-v1.2
$ git tag -a v1.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The release is now done, and tagged for future reference.&lt;/p&gt;

&lt;p&gt;To keep the changes made in the release branch, we need to merge those back into develop,
though. In Git:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout develop
$ git merge --no-ff release-v1.2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This step may well lead to a merge conflict (probably even, since we have changed the version number). If so, fix it and commit.&lt;/p&gt;

&lt;p&gt;Now we are really done and the release branch may be removed, since we don’t need it any more:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -d release-v1.2
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;hotfix-branches&quot;&gt;Hotfix branches&lt;/h1&gt;

&lt;p&gt;May branch off from: master
Must merge back into: develop and master(only lead developer)
Branch naming convention: hotfix-&lt;/p&gt;

&lt;p&gt;Hotfix branches are very much like release branches in that they are also meant to prepare for a new production release, albeit unplanned. They arise from the necessity to act immediately upon an undesired state of a live production version. When a critical bug in a production version must be resolved immediately, a hotfix branch may be branched off from the corresponding tag on the master branch that marks the production version.&lt;/p&gt;

&lt;p&gt;The essence is that work of team members (on the develop branch) can continue, while another person is preparing a quick production fix.&lt;/p&gt;

&lt;p&gt;TRY TO NEVER DO A HOTFIX.&lt;/p&gt;

&lt;h1 id=&quot;creating-the-hotfix-branch&quot;&gt;Creating the hotfix branch&lt;/h1&gt;
&lt;p&gt;Hotfix branches are created from the master branch. For example, say version 1.2 is the current production release running live and causing troubles due to a severe bug. But changes on develop are yet unstable. We may then branch off a hotfix branch and start fixing the problem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout -b hotfix-1.2.1 master
$ ./bump-version.sh 1.2.1
$ git commit -a -m &quot;Bumped version number to 1.2.1&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Don’t forget to bump the version number after branching off!&lt;/p&gt;

&lt;p&gt;Then, fix the bug and commit the fix in one or more separate commits.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git commit -m &quot;Fixed severe production problem&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&quot;finishing-a-hotfix-branch&quot;&gt;Finishing a hotfix branch&lt;/h1&gt;

&lt;h2 id=&quot;this-should-be-done-by-lead-developer-only&quot;&gt;THIS SHOULD BE DONE BY LEAD DEVELOPER ONLY!&lt;/h2&gt;

&lt;p&gt;When finished, the bugfix needs to be merged back into master, but also needs to be merged back into develop, in order to safeguard that the bugfix is included in the next release as well. This is completely similar to how release branches are finished.&lt;/p&gt;

&lt;p&gt;First, update master and tag the release.
	$ git checkout master
	$ git merge –no-ff hotfix-1.2.1
	$ git tag -a v1.2.1&lt;/p&gt;

&lt;p&gt;Next, include the bugfix in develop, too:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout develop
$ git merge --no-ff hotfix-1.2.1
The one exception to the rule here is that, when a release branch currently exists, the hotfix changes need to be merged into that release branch, instead of develop. Back-merging the bugfix into the release branch will eventually result in the bugfix being merged into develop too, when the release branch is finished. (If work in develop immediately requires this bugfix and cannot wait for the release branch to be finished, you may safely merge the bugfix into develop now already as well.)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, remove the temporary branch:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git branch -d hotfix-1.2.1
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;never-push-your-code-to-the-central-repositoryuntil-qa-signed-off-and-tested-your-change&quot;&gt;NEVER PUSH YOUR CODE TO THE CENTRAL REPOSITORYUNTIL QA SIGNED OFF AND TESTED YOUR CHANGE!!!!!!&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ git push origin develop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Git client on Windows using Cygwin</title>
   <link href="http://johnathanmarksmith.com/git/cygwin/windows/2013/11/09/how-to-install-git-client-on-windows-using-cygwin"/>
   <updated>2013-11-09T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/cygwin/windows/2013/11/09/how-to-install-git-client-on-windows-using-cygwin</id>
   <content type="html">&lt;p&gt;Here is the video if you would like to watch it:&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/fw2eR0_Dfyw?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/fw2eR0_Dfyw?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>I was published in 'This Week in Spring' on How to use Fongo and nosql unit to test Spring Data project with MongoDB, JUnit, Log4J</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/fongo/nosql/spring%20data/mongodb/2013/07/16/i-was-published-in-this-week-in-spring-on-how-to-use-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j"/>
   <updated>2013-07-16T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/fongo/nosql/spring%20data/mongodb/2013/07/16/i-was-published-in-this-week-in-spring-on-how-to-use-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j</id>
   <content type="html">&lt;p&gt;Yahooooooooo…… I was published in ‘This Week in Spring’ on How to use Fongo and nosql unit to test Spring Data project with MongoDB, JUnit, Log4J.&lt;/p&gt;

&lt;p&gt;Below is a copy of what I posted.&lt;/p&gt;

&lt;h3 id=&quot;using-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j&quot;&gt;Using Fongo and nosql-unit to test Spring-Data project with MongoDB, JUnit, Log4J&lt;/h3&gt;

&lt;p&gt;In this example I am going to show you how to test a Spring-Data MongoDB project with Fongo and nosql-unit.&lt;/p&gt;

&lt;h3 id=&quot;test-file-with-data&quot;&gt;Test File with Data&lt;/h3&gt;

&lt;p&gt;we need to have some test data in Fongo for testing so I have setup the following two files:&lt;/p&gt;

&lt;p&gt;five-person.json and two-person.json with test data. Now lets take a quick look at my repository.&lt;/p&gt;

&lt;h3 id=&quot;personrepository&quot;&gt;PersonRepository&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;@Repository
public class PersonRepository {

    static final Logger logger = LoggerFactory.getLogger(PersonRepository.class);

    @Autowired
    MongoTemplate mongoTemplate;

    public long countUnderAge() {
        List&amp;lt;Person&amp;gt; results = null;

        Query query = new Query();
        Criteria criteria = new Criteria();
        criteria = criteria.and(&quot;age&quot;).lte(21);

        query.addCriteria(criteria);
        //results = mongoTemplate.find(query, Person.class);
        long count = this.mongoTemplate.count(query, Person.class);

        logger.info(&quot;Total number of under age in database: {}&quot;, count);
        return count;
    }

    /**
     * This will count how many Person Objects I have
     */
    public long countAllPersons() {
        // findAll().size() approach is very inefficient, since it returns the whole documents
        // List&amp;lt;Person&amp;gt; results = mongoTemplate.findAll(Person.class);

        long total = this.mongoTemplate.count(null, Person.class);
        logger.info(&quot;Total number in database: {}&quot;, total);

        return total;
    }

    /**
     * This will install a new Person object with my
     * name and random age
     */
    public void insertPersonWithNameJohnathan(double age) {
        Person p = new Person(&quot;Johnathan&quot;, (int) age);

        mongoTemplate.insert(p);
    }

    /**
     * this will create a {@link Person} collection if the collection does not already exists
     */
    public void createPersonCollection() {
        if (!mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.createCollection(Person.class);
        }
    }

    /**
     * this will drop the {@link Person} collection if the collection does already exists
     */
    public void dropPersonCollection() {
        if (mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.dropCollection(Person.class);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as you can see my repository is not to hard to make and you should have a understanding of what it is doing.&lt;/p&gt;

&lt;h3 id=&quot;the-person-object&quot;&gt;The Person Object&lt;/h3&gt;

&lt;p&gt;Now we are going to take a look at the object that we are going to be inserting into the database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    @Document
    public class Person {

    @Id
    private String personId;

    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getPersonId() {
        return personId;
    }

    public void setPersonId(final String personId) {
        this.personId = personId;
    }

    public String getName() {
        return name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(final int age) {
        this.age = age;
    }
    @Override
    public String toString() {
        return &quot;Person [id=&quot; + personId + &quot;, name=&quot; + name
                + &quot;, age=&quot; + age +  &quot;]&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You see we use the @Document and the @Id.&lt;/p&gt;

&lt;h2 id=&quot;the-test-class&quot;&gt;The Test Class&lt;/h2&gt;

&lt;p&gt;Time for the testing to start&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration
public class PersonRepositoryTest {

    @Rule
    public MongoDbRule mongoDbRule = newMongoDbRule().defaultSpringMongoDb(&quot;demo-test&quot;);

    /**
     *
     *   nosql-unit requirement
     *
     */
    @Autowired private ApplicationContext applicationContext;

    @Autowired private PersonRepository personRepository;

    /**
     * Expected results are in &quot;one-person.json&quot; file
     */
    @Test
    @ShouldMatchDataSet(location = &quot;/two-person.json&quot;)
    public void testInsertPersonWithNameJohnathanAndRandomAge(){
         this.personRepository.insertPersonWithNameJohnathan(35);
         this.personRepository.insertPersonWithNameJohnathan(67);
    }

    /**
     * Insert data from &quot;five-person.json&quot; and test countAllPersons method
     */
    @Test
    @UsingDataSet(locations = {&quot;/five-person.json&quot;}, loadStrategy = LoadStrategyEnum.CLEAN_INSERT)
    public void testCountAllPersons(){
         long total = this.personRepository.countAllPersons();

         assertThat(total).isEqualTo(5);
    }

    /**
     * Insert data from &quot;five-person.json&quot; and test countUnderAge method
     */
    @Test
    @UsingDataSet(locations = {&quot;/five-person.json&quot;}, loadStrategy = LoadStrategyEnum.CLEAN_INSERT)
    public void testCountUnderAge(){
         long total = this.personRepository.countUnderAge();

         assertThat(total).isEqualTo(3);
    }

    @Configuration
    @EnableMongoRepositories
    @ComponentScan(basePackageClasses = {PersonRepository.class})  // modified to not load configs from com.johnathanmarksmith.mongodb.example.MongoConfiguration
    @PropertySource(&quot;classpath:application.properties&quot;)
    static class PersonRepositoryTestConfiguration extends AbstractMongoConfiguration {

        @Override
        protected String getDatabaseName() {
            return &quot;demo-test&quot;;
        }

        @Override
        public Mongo mongo() {
            // uses fongo for in-memory tests
            return new Fongo(&quot;mongo-test&quot;).getMongo();
        }

        @Override
        protected String getMappingBasePackage() {
            return &quot;com.johnathanmarksmith.mongodb.example.domain&quot;;
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see from the above code how easy it is to test a Spring Data MongoDB project with Fongo.&lt;/p&gt;

&lt;h3 id=&quot;download-and-the-source&quot;&gt;Download and The Source&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/spring-fongo-demo.git
cd spring-fongo-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>I was published in 'This Week in Spring' on how to use Spring Data with MongoDB</title>
   <link href="http://johnathanmarksmith.com/spring/java/spring%20data/programming/mongodb/spring%20java%20configuration/2013/07/03/i-was-published-in-this-week-in-spring-on-how-use-spring-data-with-mongodb"/>
   <updated>2013-07-03T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/spring%20data/programming/mongodb/spring%20java%20configuration/2013/07/03/i-was-published-in-this-week-in-spring-on-how-use-spring-data-with-mongodb</id>
   <content type="html">&lt;p&gt;Yahooooooooo…… I was published in ‘This Week in Spring’ on how use Spring Data with MongoDB.&lt;/p&gt;

&lt;p&gt;Below is the example that was posted:&lt;/p&gt;

&lt;p&gt;In this example I am going to show you how to post data to a MongoDB database using Spring Data Mongo
in Java using Spring, Spring Java Configuration, Maven and Log4J.&lt;/p&gt;

&lt;h3 id=&quot;spring-java-configuration&quot;&gt;Spring Java Configuration&lt;/h3&gt;

&lt;p&gt;Let’s take a quick look at the Spring Java Configuration file that the project is going to be using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableMongoRepositories
@ComponentScan(basePackageClasses = {MongoDBApp.class})
@PropertySource(&quot;classpath:application.properties&quot;)
public class MongoConfiguration extends AbstractMongoConfiguration
{


    @Override
    protected String getDatabaseName() {
        return &quot;demo&quot;;
    }

    @Override
    public Mongo mongo() throws Exception {
        return new Mongo();
    }

    @Override
    protected String getMappingBasePackage() {
        return &quot;com.johnathanmarksmith.mongodb.example.domain&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see from the above code the trick to all this is to use @EnableMongoRepositories and to
 extend your class from AbstractMongoConfiguration.&lt;/p&gt;

&lt;h3 id=&quot;the-person-object&quot;&gt;The Person Object&lt;/h3&gt;

&lt;p&gt;Now we are going to take a look at the object that we are going to be inserting into the database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    @Document
    public class Person {

    @Id
    private String personId;

    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getPersonId() {
        return personId;
    }

    public void setPersonId(final String personId) {
        this.personId = personId;
    }

    public String getName() {
        return name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(final int age) {
        this.age = age;
    }
    @Override
    public String toString() {
        return &quot;Person [id=&quot; + personId + &quot;, name=&quot; + name
                + &quot;, age=&quot; + age +  &quot;]&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You see we use the @Document and the @Id.&lt;/p&gt;

&lt;h3 id=&quot;the-repository&quot;&gt;The Repository&lt;/h3&gt;

&lt;p&gt;Now its time to see the source code in the repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Repository
public class PersonRepository {

    static final Logger logger = LoggerFactory.getLogger(PersonRepository.class);

    @Autowired
    MongoTemplate mongoTemplate;

    public void countUnderAge() {
        List&amp;lt;Person&amp;gt; results = null;

        Query query = new Query();
        Criteria criteria = new Criteria();
        criteria = criteria.and(&quot;age&quot;).lte(21);

        query.addCriteria(criteria);
        results = mongoTemplate.find(query, Person.class);

        logger.info(&quot;Total number of under age in database: {}&quot;, results.size());
    }

    /**
     * This will count how many Person Objects I have
     */
    public void countAllPersons() {
        List&amp;lt;Person&amp;gt; results = mongoTemplate.findAll(Person.class);
        logger.info(&quot;Total number in database: {}&quot;, results.size());
    }

    /**
     * This will install a new Person object with my
     * name and random age
     */
    public void insertPersonWithNameJohnathanAndRandomAge() {

        double age = Math.ceil(Math.random() * 100);
        Person p = new Person(&quot;Johnathan&quot;, (int) age);

        mongoTemplate.insert(p);
    }

    /**
     * this will create a {@link Person} collection if the collection does not already exists
     */
    public void createPersonCollection() {
        if (!mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.createCollection(Person.class);
        }
    }

    /**
     * this will drop the {@link Person} collection if the collection does already exists
     */
    public void dropPersonCollection() {
        if (mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.dropCollection(Person.class);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;the-main-class&quot;&gt;The Main Class&lt;/h2&gt;

&lt;p&gt;Time for the main class now.. are you ready for all this code??&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    public static void main(String[] args) {
        logger.info(&quot;MongoDemo application&quot;);

        ApplicationContext context = new AnnotationConfigApplicationContext(MongoConfiguration.class);

        PersonRepository personRepository = context.getBean(PersonRepository.class);

        // cleanup person collection before insertion
        personRepository.dropPersonCollection();

        //create person collection
        personRepository.createPersonCollection();

        for (int i = 0; i &amp;lt; 10000; i++) {
            personRepository.insertPersonWithNameJohnathanAndRandomAge();
        }

        personRepository.countAllPersons();


        /***
         *
         * Added Under Age Test For someone to see
         *
         */
        personRepository.countUnderAge();


        logger.info(&quot;MongoDemo application&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see from the above code how easy it is to use Spring Data Mongo to post data to a MongoDB.&lt;/p&gt;

&lt;h3 id=&quot;download-and-run-code&quot;&gt;Download and Run Code&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/spring-mongo-demo.git
cd spring-mongo-demo
mvn clean package
mvn exec:java
&lt;/code&gt;&lt;/pre&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/aY_JsfJM2eU?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/aY_JsfJM2eU?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;Please keep in mind to be able to run this demo application start your MongoDB instance, Yes you need MongoDB.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

&lt;p&gt;For a MongoDB guide see http://www.mongodb.org/display/DOCS/Quickstart&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to work with Default Values from a HashMap in Java</title>
   <link href="http://johnathanmarksmith.com/java/programming/2013/07/01/how-to-work-with-default-values-from-a-hashmap-in-java"/>
   <updated>2013-07-01T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/programming/2013/07/01/how-to-work-with-default-values-from-a-hashmap-in-java</id>
   <content type="html">&lt;p&gt;This is a quick example on how to get default values in hashMaps and other java objacts.&lt;/p&gt;

&lt;p&gt;Here is the source code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    public class App {
        public static void main(String[] args) {
            System.out.println(&quot;Hello World, Default Values In HashMap Example&quot; );

            Map&amp;lt;String, String&amp;gt; myMap = new HashMap&amp;lt;String, String&amp;gt;();

            myMap.put(&quot;SABRAIN&quot;, &quot;KID&quot;);
            myMap.put(&quot;JESSCIA&quot;, &quot;KID&quot;);
            myMap.put(&quot;JOHNATHAN&quot;,&quot;ME&quot;);

            Iterator iterator = myMap.entrySet().iterator();

            /**
             *
             *   This will show all the keys and values in my hashMap
             */
            while (iterator.hasNext()) {
                Map.Entry mapEntry = (Map.Entry) iterator.next();
                System.out.println(&quot;The key is: &quot; + mapEntry.getKey()
                        + &quot;,value is :&quot; + mapEntry.getValue());
            }

            /**
             *
             * Now lets look for someone not in the map and setup a default value
             *
             */

            System.out.println(StringUtils.defaultString(myMap.get(&quot;REGAN&quot;),&quot;WIFE&quot;));


        }
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You need to add this to your POM&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;      &amp;lt;dependency&amp;gt;
          &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt;
          &amp;lt;artifactId&amp;gt;commons-lang3&amp;lt;/artifactId&amp;gt;
          &amp;lt;version&amp;gt;3.0&amp;lt;/version&amp;gt;
      &amp;lt;/dependency&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/DefaultValuesInHashMap.git
cd DefaultValuesInHashMap
mvn package
cd target
java -jar DefaultValuesInHashMap.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to use Fongo and nosql unit to test Spring Data project with MongoDB, JUnit, Log4J</title>
   <link href="http://johnathanmarksmith.com/spring/spring%20data/mongodb/fongo/java/javaconfig/programming/spring%20java%20configuration/2013/06/28/how-to-use-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j"/>
   <updated>2013-06-28T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/spring%20data/mongodb/fongo/java/javaconfig/programming/spring%20java%20configuration/2013/06/28/how-to-use-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j</id>
   <content type="html">&lt;h3 id=&quot;using-fongo-and-nosql-unit-to-test-spring-data-project-with-mongodb-junit-log4j&quot;&gt;Using Fongo and nosql-unit to test Spring-Data project with MongoDB, JUnit, Log4J&lt;/h3&gt;

&lt;p&gt;In this example I am going to show you how to test a Spring-Data MongoDB project with Fongo and nosql-unit.&lt;/p&gt;

&lt;h3 id=&quot;test-file-with-data&quot;&gt;Test File with Data&lt;/h3&gt;

&lt;p&gt;we need to have some test data in Fongo for testing so I have setup the following two files:&lt;/p&gt;

&lt;p&gt;five-person.json and two-person.json with test data. Now lets take a quick look at my repository.&lt;/p&gt;

&lt;h3 id=&quot;personrepository&quot;&gt;PersonRepository&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;@Repository
public class PersonRepository {

    static final Logger logger = LoggerFactory.getLogger(PersonRepository.class);

    @Autowired
    MongoTemplate mongoTemplate;

    public long countUnderAge() {
        List&amp;lt;Person&amp;gt; results = null;

        Query query = new Query();
        Criteria criteria = new Criteria();
        criteria = criteria.and(&quot;age&quot;).lte(21);

        query.addCriteria(criteria);
        //results = mongoTemplate.find(query, Person.class);
        long count = this.mongoTemplate.count(query, Person.class);

        logger.info(&quot;Total number of under age in database: {}&quot;, count);
        return count;
    }

    /**
     * This will count how many Person Objects I have
     */
    public long countAllPersons() {
        // findAll().size() approach is very inefficient, since it returns the whole documents
        // List&amp;lt;Person&amp;gt; results = mongoTemplate.findAll(Person.class);

        long total = this.mongoTemplate.count(null, Person.class);
        logger.info(&quot;Total number in database: {}&quot;, total);

        return total;
    }

    /**
     * This will install a new Person object with my
     * name and random age
     */
    public void insertPersonWithNameJohnathan(double age) {
        Person p = new Person(&quot;Johnathan&quot;, (int) age);

        mongoTemplate.insert(p);
    }

    /**
     * this will create a {@link Person} collection if the collection does not already exists
     */
    public void createPersonCollection() {
        if (!mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.createCollection(Person.class);
        }
    }

    /**
     * this will drop the {@link Person} collection if the collection does already exists
     */
    public void dropPersonCollection() {
        if (mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.dropCollection(Person.class);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as you can see my repository is not to hard to make and you should have a understanding of what it is doing.&lt;/p&gt;

&lt;h3 id=&quot;the-person-object&quot;&gt;The Person Object&lt;/h3&gt;

&lt;p&gt;Now we are going to take a look at the object that we are going to be inserting into the database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    @Document
    public class Person {

    @Id
    private String personId;

    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getPersonId() {
        return personId;
    }

    public void setPersonId(final String personId) {
        this.personId = personId;
    }

    public String getName() {
        return name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(final int age) {
        this.age = age;
    }
    @Override
    public String toString() {
        return &quot;Person [id=&quot; + personId + &quot;, name=&quot; + name
                + &quot;, age=&quot; + age +  &quot;]&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You see we use the @Document and the @Id.&lt;/p&gt;

&lt;h2 id=&quot;the-test-class&quot;&gt;The Test Class&lt;/h2&gt;

&lt;p&gt;Time for the testing to start&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration
public class PersonRepositoryTest {

    @Rule
    public MongoDbRule mongoDbRule = newMongoDbRule().defaultSpringMongoDb(&quot;demo-test&quot;);

    /**
     *
     *   nosql-unit requirement
     *
     */
    @Autowired private ApplicationContext applicationContext;

    @Autowired private PersonRepository personRepository;

    /**
     * Expected results are in &quot;one-person.json&quot; file
     */
    @Test
    @ShouldMatchDataSet(location = &quot;/two-person.json&quot;)
    public void testInsertPersonWithNameJohnathanAndRandomAge(){
         this.personRepository.insertPersonWithNameJohnathan(35);
         this.personRepository.insertPersonWithNameJohnathan(67);
    }

    /**
     * Insert data from &quot;five-person.json&quot; and test countAllPersons method
     */
    @Test
    @UsingDataSet(locations = {&quot;/five-person.json&quot;}, loadStrategy = LoadStrategyEnum.CLEAN_INSERT)
    public void testCountAllPersons(){
         long total = this.personRepository.countAllPersons();

         assertThat(total).isEqualTo(5);
    }

    /**
     * Insert data from &quot;five-person.json&quot; and test countUnderAge method
     */
    @Test
    @UsingDataSet(locations = {&quot;/five-person.json&quot;}, loadStrategy = LoadStrategyEnum.CLEAN_INSERT)
    public void testCountUnderAge(){
         long total = this.personRepository.countUnderAge();

         assertThat(total).isEqualTo(3);
    }

    @Configuration
    @EnableMongoRepositories
    @ComponentScan(basePackageClasses = {PersonRepository.class})  // modified to not load configs from com.johnathanmarksmith.mongodb.example.MongoConfiguration
    @PropertySource(&quot;classpath:application.properties&quot;)
    static class PersonRepositoryTestConfiguration extends AbstractMongoConfiguration {

        @Override
        protected String getDatabaseName() {
            return &quot;demo-test&quot;;
        }

        @Override
        public Mongo mongo() {
            // uses fongo for in-memory tests
            return new Fongo(&quot;mongo-test&quot;).getMongo();
        }

        @Override
        protected String getMappingBasePackage() {
            return &quot;com.johnathanmarksmith.mongodb.example.domain&quot;;
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see from the above code how easy it is to test a Spring Data MongoDB project with Fongo.&lt;/p&gt;

&lt;h3 id=&quot;download-and-the-source&quot;&gt;Download and The Source&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/spring-fongo-demo.git
cd spring-fongo-demo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use Spring Data with MongoDB and Spring's Java Configuration (JavaConfig) style with Maven, JUnit, Log4J</title>
   <link href="http://johnathanmarksmith.com/spring/spring%20data/mongodb/java/javaconfig/programming/spring%20java%20configuration/2013/06/27/how-to-use-spring-data-with-mongodb-and-springs-java-configuration-javaconfig-style-with-maven-junit-log4j"/>
   <updated>2013-06-27T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/spring%20data/mongodb/java/javaconfig/programming/spring%20java%20configuration/2013/06/27/how-to-use-spring-data-with-mongodb-and-springs-java-configuration-javaconfig-style-with-maven-junit-log4j</id>
   <content type="html">&lt;p&gt;In this example I am going to show you how to post data to a MongoDB database using Spring Data Mongo
in Java using Spring, Spring Java Configuration, Maven and Log4J.&lt;/p&gt;

&lt;h3 id=&quot;spring-java-configuration&quot;&gt;Spring Java Configuration&lt;/h3&gt;

&lt;p&gt;Let’s take a quick look at the Spring Java Configuration file that the project is going to be using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableMongoRepositories
@ComponentScan(basePackageClasses = {MongoDBApp.class})
@PropertySource(&quot;classpath:application.properties&quot;)
public class MongoConfiguration extends AbstractMongoConfiguration
{


    @Override
    protected String getDatabaseName() {
        return &quot;demo&quot;;
    }

    @Override
    public Mongo mongo() throws Exception {
        return new Mongo();
    }

    @Override
    protected String getMappingBasePackage() {
        return &quot;com.johnathanmarksmith.mongodb.example.domain&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see from the above code the trick to all this is to use @EnableMongoRepositories and to
 extend your class from AbstractMongoConfiguration.&lt;/p&gt;

&lt;h3 id=&quot;the-person-object&quot;&gt;The Person Object&lt;/h3&gt;

&lt;p&gt;Now we are going to take a look at the object that we are going to be inserting into the database.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    @Document
    public class Person {

    @Id
    private String personId;

    private String name;
    private int age;

    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getPersonId() {
        return personId;
    }

    public void setPersonId(final String personId) {
        this.personId = personId;
    }

    public String getName() {
        return name;
    }

    public void setName(final String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(final int age) {
        this.age = age;
    }
    @Override
    public String toString() {
        return &quot;Person [id=&quot; + personId + &quot;, name=&quot; + name
                + &quot;, age=&quot; + age +  &quot;]&quot;;
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You see we use the @Document and the @Id.&lt;/p&gt;

&lt;h3 id=&quot;the-repository&quot;&gt;The Repository&lt;/h3&gt;

&lt;p&gt;Now its time to see the source code in the repository&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Repository
public class PersonRepository {

    static final Logger logger = LoggerFactory.getLogger(PersonRepository.class);

    @Autowired
    MongoTemplate mongoTemplate;

    public void countUnderAge() {
        List&amp;lt;Person&amp;gt; results = null;

        Query query = new Query();
        Criteria criteria = new Criteria();
        criteria = criteria.and(&quot;age&quot;).lte(21);

        query.addCriteria(criteria);
        results = mongoTemplate.find(query, Person.class);

        logger.info(&quot;Total number of under age in database: {}&quot;, results.size());
    }

    /**
     * This will count how many Person Objects I have
     */
    public void countAllPersons() {
        List&amp;lt;Person&amp;gt; results = mongoTemplate.findAll(Person.class);
        logger.info(&quot;Total number in database: {}&quot;, results.size());
    }

    /**
     * This will install a new Person object with my
     * name and random age
     */
    public void insertPersonWithNameJohnathanAndRandomAge() {

        double age = Math.ceil(Math.random() * 100);
        Person p = new Person(&quot;Johnathan&quot;, (int) age);

        mongoTemplate.insert(p);
    }

    /**
     * this will create a {@link Person} collection if the collection does not already exists
     */
    public void createPersonCollection() {
        if (!mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.createCollection(Person.class);
        }
    }

    /**
     * this will drop the {@link Person} collection if the collection does already exists
     */
    public void dropPersonCollection() {
        if (mongoTemplate.collectionExists(Person.class)) {
            mongoTemplate.dropCollection(Person.class);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;the-main-class&quot;&gt;The Main Class&lt;/h2&gt;

&lt;p&gt;Time for the main class now.. are you ready for all this code??&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    public static void main(String[] args) {
        logger.info(&quot;MongoDemo application&quot;);

        ApplicationContext context = new AnnotationConfigApplicationContext(MongoConfiguration.class);

        PersonRepository personRepository = context.getBean(PersonRepository.class);

        // cleanup person collection before insertion
        personRepository.dropPersonCollection();

        //create person collection
        personRepository.createPersonCollection();

        for (int i = 0; i &amp;lt; 10000; i++) {
            personRepository.insertPersonWithNameJohnathanAndRandomAge();
        }

        personRepository.countAllPersons();


        /***
         *
         * Added Under Age Test For someone to see
         *
         */
        personRepository.countUnderAge();


        logger.info(&quot;MongoDemo application&quot;);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see from the above code how easy it is to use Spring Data Mongo to post data to a MongoDB.&lt;/p&gt;

&lt;h3 id=&quot;download-and-run-code&quot;&gt;Download and Run Code&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/spring-mongo-demo.git
cd spring-mongo-demo
mvn clean package
mvn exec:java
&lt;/code&gt;&lt;/pre&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;//www.youtube.com/v/aY_JsfJM2eU?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;//www.youtube.com/v/aY_JsfJM2eU?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;Please keep in mind to be able to run this demo application start your MongoDB instance, Yes you need MongoDB.&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

&lt;p&gt;For a MongoDB guide see http://www.mongodb.org/display/DOCS/Quickstart&lt;/p&gt;

&lt;p&gt;Thanks, Johnathan Mark Smith&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use Spring RESTTeample To Post Data to a Web Service with Authentication</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/26/how-to-use-spring-restteample-to-post-data-to-a-web-service-with-authentication"/>
   <updated>2013-06-26T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/26/how-to-use-spring-restteample-to-post-data-to-a-web-service-with-authentication</id>
   <content type="html">&lt;h3 id=&quot;using-spring-resttemplate-to-post-objects-to-restful-web-services-that-has-authentication-with-springs-java-configuration-javaconfig-style-with-maven-junit-log4j&quot;&gt;Using Spring RESTTemplate to Post Objects to RESTful web services that has Authentication with Spring’s Java Configuration (JavaConfig) style with Maven, JUnit, Log4J&lt;/h3&gt;

&lt;p&gt;In this example I am going to show you how to post data to a RESTful web service in Java using Spring, Spring Java Configuration and more&lt;/p&gt;

&lt;h3 id=&quot;web-service-code&quot;&gt;Web Service Code&lt;/h3&gt;

&lt;p&gt;Let’s take a quick look at the Spring MVC Web Service code on the server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Controller
@RequestMapping(&quot;/api&quot;)
class JSonController
{

    private static final Logger logger = LoggerFactory.getLogger(JSonController.class);



    @RequestMapping(value = &quot;/{id}&quot;, method = RequestMethod.POST)
    @ResponseBody
    public User updateCustomer(@PathVariable(&quot;id&quot;) String id, @RequestBody User user) {

        logger.debug(&quot;I am in the controller and got ID: &quot; + id.toString());
        logger.debug(&quot;I am in the controller and got user name: &quot; + user.toString());

        return new User(&quot;NEW123&quot;, &quot;NEW SMITH&quot;);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see from the code above the web service is goign to what for a ID and user object to be passed in and then its going to create a new User Object and send it back to the client.&lt;/p&gt;

&lt;h3 id=&quot;time-for-the-client-code&quot;&gt;Time For The Client Code&lt;/h3&gt;

&lt;p&gt;You can see from the client code below is that we are using Spring RESTTemaple and going to post an User Object to a web server and get one back.&lt;/p&gt;

&lt;p&gt;@PropertySource(“classpath:application.properties”)
   public class Main
   {&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;   /**
    * Setting up logger
    */
   private static final Logger LOGGER = getLogger(Main.class);


   public static void main(String[] args) throws IOException
   {
       LOGGER.debug(&quot;Starting REST Client!!!!&quot;);

       /**
        *
        * This is going to setup the REST server configuration in the applicationContext
        * you can see that I am using the new Spring's Java Configuration style and not some OLD XML file
        *
        */
       ApplicationContext context = new AnnotationConfigApplicationContext(RESTConfiguration.class);

       /**
        *
        * We now get a RESTServer bean from the ApplicationContext which has all the data we need to
        * log into the REST service with.
        *
        */
       RESTServer mRESTServer = context.getBean(RESTServer.class);

       /**
        *
        * Setting up BASIC Authentication access
        *
        */

        HttpClient client = new HttpClient();
       UsernamePasswordCredentials credentials =
               new UsernamePasswordCredentials(mRESTServer.getUser(), mRESTServer.getPassword());

       client.getState().setCredentials(
               new AuthScope(mRESTServer.getHost(), 8080, AuthScope.ANY_REALM),
               credentials);

       CommonsClientHttpRequestFactory commons = new CommonsClientHttpRequestFactory(client);



       /**
        *
        * Setting up data to be sent to REST service
        *
        */
       Map&amp;lt;String, String&amp;gt; vars = new HashMap&amp;lt;String, String&amp;gt;();
       vars.put(&quot;id&quot;, &quot;INID&quot;);

       /**
        *
        * Doing the REST call and then displaying the data/user object
        *
        */
       try
       {

           /*

               This is code to post and return a user object

            */

           RestTemplate rt = new RestTemplate(commons); // Added the CommonsClientHttpRequestFactory

           rt.getMessageConverters().add(new MappingJacksonHttpMessageConverter());
           rt.getMessageConverters().add(new StringHttpMessageConverter());

           String uri = new String(&quot;http://&quot; + mRESTServer.getHost() + &quot;:8080/springmvc-resttemplate-auth-test/api/{id}&quot;);

           User u = new User();
           u.setName(&quot;Johnathan M Smith&quot;);
           u.setUser(&quot;JMS&quot;);


           User returns = rt.postForObject(uri, u, User.class, vars);

           LOGGER.debug(&quot;User:  &quot; + u.toString());

       }
       catch (HttpClientErrorException e)
       {
           /**
            *
            * If we get a HTTP Exception display the error message
            */

           LOGGER.error(&quot;error:  &quot; + e.getResponseBodyAsString());

           ObjectMapper mapper = new ObjectMapper();
           ErrorHolder eh = mapper.readValue(e.getResponseBodyAsString(), ErrorHolder.class);

           LOGGER.error(&quot;error:  &quot; + eh.getErrorMessage());

       }
       catch(Exception e)
       {
           LOGGER.error(&quot;error:  &quot; + e.getMessage());

       }
   }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;}&lt;/p&gt;

&lt;p&gt;You can see from the above code how easy it is to use RESTTeample to post data to a web service.&lt;/p&gt;

&lt;p&gt;You can see how easy it is to use Spring’s Java Configuration (JavaConfig) style and Not XML.. The time of using XML files with Springs is over…&lt;/p&gt;

&lt;h3 id=&quot;download-the-source&quot;&gt;Download The Source&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/springmvc-resttemplate-auth-test.git
cd springmvc-resttemplate-auth-test.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Setup BASIC Authentication with Spring Web Services</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/24/how-to-setup-basic-authentication-with-spring-web-services"/>
   <updated>2013-06-24T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/24/how-to-setup-basic-authentication-with-spring-web-services</id>
   <content type="html">&lt;p&gt;This is a very basic example of using Spring MVC, REST, Spring  and Spring Security, Spring Test Framework using Spring’s Java configuration.&lt;/p&gt;

&lt;p&gt;The first part of this is to create a configuration class for the web app.  below is a sample of the configuration class we are going to use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableWebMvc
@ComponentScan(basePackages = {&quot;com.johnathanmsmith.mvc.web&quot;})
@ImportResource(&quot;/WEB-INF/spring/applicationContext.xml&quot;)
public class WebMVCConfig extends WebMvcConfigurerAdapter
{

    private static final Logger logger = LoggerFactory.getLogger(WebMVCConfig.class);

    @Bean
    public ViewResolver resolver()
    {
        UrlBasedViewResolver url = new UrlBasedViewResolver();
        url.setPrefix(&quot;/views/&quot;);
        url.setViewClass(JstlView.class);
        url.setSuffix(&quot;.jsp&quot;);
        return url;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry)
    {
        logger.debug(&quot;setting up resource handlers&quot;);
        registry.addResourceHandler(&quot;/resources/&quot;).addResourceLocations(&quot;/resources/**&quot;);
    }

    @Override
    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer)
    {
        logger.debug(&quot;configureDefaultServletHandling&quot;);
        configurer.enable();
    }

    @Bean
    public SimpleMappingExceptionResolver simpleMappingExceptionResolver()
    {
        SimpleMappingExceptionResolver b = new SimpleMappingExceptionResolver();

        Properties mappings = new Properties();
        mappings.put(&quot;org.springframework.web.servlet.PageNotFound&quot;, &quot;p404&quot;);
        mappings.put(&quot;org.springframework.dao.DataAccessException&quot;, &quot;dataAccessFailure&quot;);
        mappings.put(&quot;org.springframework.transaction.TransactionException&quot;, &quot;dataAccessFailure&quot;);
        b.setExceptionMappings(mappings);
        return b;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next you have to setup the web.xml file to use the above configuration class, we do this but setting the contectConfigLocation to the package of the configuration class.&lt;/p&gt;

&lt;p&gt;We also setup the Spring Security Filter Chain pointing to the  applicationContext.xml file that points to my-security.xml.&lt;/p&gt;

&lt;p&gt;See below for the web.xml code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;
         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;
         version=&quot;2.5&quot;&amp;gt;
    &amp;lt;servlet&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextClass&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;org.springframework.web.context.support.AnnotationConfigWebApplicationContext&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;com.johnathanmsmith.mvc.web.config&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
    &amp;lt;/servlet&amp;gt;

    &amp;lt;servlet-mapping&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/servlet-mapping&amp;gt;

    &amp;lt;filter&amp;gt;
        &amp;lt;filter-name&amp;gt;springSecurityFilterChain&amp;lt;/filter-name&amp;gt;
        &amp;lt;filter-class&amp;gt;org.springframework.web.filter.DelegatingFilterProxy&amp;lt;/filter-class&amp;gt;
    &amp;lt;/filter&amp;gt;
    &amp;lt;filter-mapping&amp;gt;
        &amp;lt;filter-name&amp;gt;springSecurityFilterChain&amp;lt;/filter-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/*&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/filter-mapping&amp;gt;

    &amp;lt;context-param&amp;gt;
        &amp;lt;description&amp;gt;The Spring configuration files.&amp;lt;/description&amp;gt;
        &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
        &amp;lt;param-value&amp;gt;/WEB-INF/spring/applicationContext.xml&amp;lt;/param-value&amp;gt;
    &amp;lt;/context-param&amp;gt;

    &amp;lt;listener&amp;gt;
        &amp;lt;description&amp;gt;The Spring context listener.&amp;lt;/description&amp;gt;
        &amp;lt;listener-class&amp;gt;org.springframework.web.context.ContextLoaderListener&amp;lt;/listener-class&amp;gt;
    &amp;lt;/listener&amp;gt;

&amp;lt;/web-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you can see that we setup BASIC authentication in the my-security.xml file using Spring secuirty&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;
&amp;lt;beans:beans xmlns=&quot;http://www.springframework.org/schema/security&quot;
             xmlns:beans=&quot;http://www.springframework.org/schema/beans&quot;
             xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
             xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-3.1.xsd&quot;&amp;gt;


    &amp;lt;global-method-security pre-post-annotations=&quot;enabled&quot;/&amp;gt;

    &amp;lt;http use-expressions=&quot;true&quot;&amp;gt;
        &amp;lt;intercept-url access=&quot;hasRole('ROLE_VERIFIED')&quot; pattern=&quot;/json/*&quot;/&amp;gt;
        &amp;lt;intercept-url pattern='/*' access='permitAll'/&amp;gt;

        &amp;lt;logout logout-success-url=&quot;/&quot;/&amp;gt;

        &amp;lt;session-management session-fixation-protection=&quot;newSession&quot;&amp;gt;
            &amp;lt;concurrency-control max-sessions=&quot;1&quot;/&amp;gt;
        &amp;lt;/session-management&amp;gt;

        &amp;lt;http-basic /&amp;gt;
    &amp;lt;/http&amp;gt;


    &amp;lt;authentication-manager&amp;gt;
        &amp;lt;authentication-provider&amp;gt;
            &amp;lt;user-service&amp;gt;
                &amp;lt;user name=&quot;test&quot; password=&quot;test&quot; authorities=&quot;ROLE_VERIFIED&quot;/&amp;gt;
            &amp;lt;/user-service&amp;gt;

        &amp;lt;/authentication-provider&amp;gt;
    &amp;lt;/authentication-manager&amp;gt;
&amp;lt;/beans:beans&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets setup a basic JSON controller to sent json data back to the client:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Controller
@RequestMapping(&quot;/json&quot;)
class JSonController
{

    private static final Logger logger = LoggerFactory.getLogger(JSonController.class);

    private MappingJacksonJsonView  jsonView = new MappingJacksonJsonView();


    @RequestMapping(value = &quot;/{name}&quot;, method = RequestMethod.GET)
    @ResponseBody
    public User getName(@PathVariable String name, ModelMap model) throws ResourceNotFoundException
    {

        logger.debug(&quot;I am in the controller and got user name: &quot; + name);

        /*

            Simulate a successful lookup for 2 users, this is where your real lookup code would go

         */

        if (&quot;JohnathanMarkSmith&quot;.equals(name))
        {
            return new User(&quot;Johnathan Mark Smith&quot;, name);
        }

        if (&quot;Regan&quot;.equals(name))
        {
            return new User(&quot;Regan Smith&quot;, name);
        }

        throw new ResourceNotFoundException(&quot;User Is Not Found&quot;);
    }

    @RequestMapping(value = &quot;/&quot;, method = RequestMethod.GET)
    public ResponseEntity&amp;lt;User&amp;gt; getDisplayDefault(ModelMap model)
    {
        return new ResponseEntity&amp;lt;User&amp;gt;(new User(&quot;Johnathan Mark Smith&quot;, &quot;JohnathanMarkSmith&quot;), HttpStatus.OK);
    }


    @ExceptionHandler
    public ResponseEntity&amp;lt;ErrorHolder&amp;gt; handle(ResourceNotFoundException e) {
        logger.warn(&quot;The resource was not found&quot;, e);
        return new ResponseEntity&amp;lt;ErrorHolder&amp;gt;(new ErrorHolder(&quot;Uh oh&quot;), HttpStatus.NOT_FOUND);
    }


    class ErrorHolder {
        public String errorMessage;
        @JsonCreator
        public ErrorHolder(@JsonProperty(&quot;errorMessage&quot;) String errorMessage)
        {
            this.errorMessage = errorMessage;
        }

    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats all it takes..&lt;/p&gt;

&lt;h2 id=&quot;getting-the-project-and-running-it&quot;&gt;Getting The Project and Running It&lt;/h2&gt;

&lt;p&gt;To get this project and run it you will need to follow the following steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone  git@github.com:JohnathanMarkSmith/springmvc-rest-secured-test.git
cd springmvc-rest-secured-test/
mvn tomcat7:run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open your web brower and goto http://127.0.0.1:8080/springmvc-rest-secured-test/&lt;/p&gt;

&lt;p&gt;This its… Have run with it…&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at john@johnathanmarksmith.com or checkout my web site http://JohnathanMarkSmith.com&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use Spring RESTTemplate To Post Data to a Web Service</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/18/how-to-use-spring-resttemplate-to-post-data-to-a-web-service"/>
   <updated>2013-06-18T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/resttemplate/2013/06/18/how-to-use-spring-resttemplate-to-post-data-to-a-web-service</id>
   <content type="html">&lt;h3 id=&quot;using-spring-resttemplate-to-post-objects-to-restful-web-services-with-springs-java-configuration-javaconfig-style-with-maven-junit-log4j&quot;&gt;Using Spring RESTTemplate to Post Objects to RESTful web services with Spring’s Java Configuration (JavaConfig) style with Maven, JUnit, Log4J&lt;/h3&gt;

&lt;p&gt;In this example I am going to show you how to post data to a RESTful web service in Java using Spring, Spring Java Configuration and more&lt;/p&gt;

&lt;h3 id=&quot;web-service-code&quot;&gt;Web Service Code&lt;/h3&gt;

&lt;p&gt;Let’s take a quick look at the Spring MVC Web Service code on the server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Controller
@RequestMapping(&quot;/api&quot;)
class JSonController
{

    private static final Logger logger = LoggerFactory.getLogger(JSonController.class);



    @RequestMapping(value = &quot;/{id}&quot;, method = RequestMethod.POST)
    @ResponseBody
    public User updateCustomer(@PathVariable(&quot;id&quot;) String id, @RequestBody User user) {

        logger.debug(&quot;I am in the controller and got ID: &quot; + id.toString());
        logger.debug(&quot;I am in the controller and got user name: &quot; + user.toString());

        return new User(&quot;NEW123&quot;, &quot;NEW SMITH&quot;);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As you can see from the code above the web service is goign to what for a ID and user object to be passed in and then its going to create a new User Object and send it back to the client.&lt;/p&gt;

&lt;p&gt;Lets take a quick look inside the User Object&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class User
{
    private String user;
    private String name;


    public User()
    {
    }

    public User(String user, String name)
    {
        this.user = user;
        this.name = name;
    }

    public String getUser()
    {
        return user;
    }

    public void setUser(String user)
    {
        this.user = user;
    }

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So you can see from the above code that the user object has to fields user and name.&lt;/p&gt;

&lt;h3 id=&quot;time-for-the-client-code&quot;&gt;Time For The Client Code&lt;/h3&gt;

&lt;p&gt;You can see from the client code below is that we are using Spring RESTTemaple and going to post an User Object to a web server and get one back.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@PropertySource(&quot;classpath:application.properties&quot;)
public class Main
{

    /**
     * Setting up logger
     */
    private static final Logger LOGGER = getLogger(Main.class);


    public static void main(String[] args) throws IOException
    {
        LOGGER.debug(&quot;Starting REST Client!!!!&quot;);

        /**
         *
         * This is going to setup the REST server configuration in the applicationContext
         * you can see that I am using the new Spring's Java Configuration style and not some OLD XML file
         *
         */
        ApplicationContext context = new AnnotationConfigApplicationContext(RESTConfiguration.class);

        /**
         *
         * We now get a RESTServer bean from the ApplicationContext which has all the data we need to
         * log into the REST service with.
         *
         */
        RESTServer mRESTServer = context.getBean(RESTServer.class);



        /**
         *
         * Setting up data to be sent to REST service
         *
         */
        Map&amp;lt;String, String&amp;gt; vars = new HashMap&amp;lt;String, String&amp;gt;();
        vars.put(&quot;id&quot;, &quot;JS01&quot;);




        /**
         *
         * Doing the REST call and then displaying the data/user object
         *
         */


        try
        {

            /*

                This is code to post and return a user object

             */

            RestTemplate rt = new RestTemplate();
            rt.getMessageConverters().add(new MappingJacksonHttpMessageConverter());
            rt.getMessageConverters().add(new StringHttpMessageConverter());

            String uri = new String(&quot;http://&quot; + mRESTServer.getHost() + &quot;:8080/springmvc-resttemplate-test/api/{id}&quot;);

            User u = new User();
            u.setName(&quot;Johnathan M Smith&quot;);
            u.setUser(&quot;JS01&quot;);

            User returns = rt.postForObject(uri, u, User.class, vars);

            LOGGER.debug(&quot;User:  &quot; + u.toString());

        }
        catch (HttpClientErrorException e)
        {
            /**
             *
             * If we get a HTTP Exception display the error message
             */

            LOGGER.error(&quot;error:  &quot; + e.getResponseBodyAsString());

            ObjectMapper mapper = new ObjectMapper();
            ErrorHolder eh = mapper.readValue(e.getResponseBodyAsString(), ErrorHolder.class);

            LOGGER.error(&quot;error:  &quot; + eh.getErrorMessage());

        }
        catch(Exception e)
        {
            LOGGER.error(&quot;error:  &quot; + e.getMessage());

        }
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see from the above code how easy it is to use RESTTeample to post data to a web service.&lt;/p&gt;

&lt;h3 id=&quot;download-the-source&quot;&gt;Download The Source&lt;/h3&gt;

&lt;p&gt;You can checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/springmvc-resttemplate-test.git
cd springmvc-resttemplate-test.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the video:&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/uSP-_aQjXBI?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/uSP-_aQjXBI?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What are the types of the transaction management Spring supports?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/spring%20interview%20questions/2013/06/13/java-interview-question-what-are-the-types-of-the-transaction-management-spring-supports"/>
   <updated>2013-06-13T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/spring%20interview%20questions/2013/06/13/java-interview-question-what-are-the-types-of-the-transaction-management-spring-supports</id>
   <content type="html">&lt;p&gt;Spring Framework supports:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Programmatic transaction management.&lt;/li&gt;
  &lt;li&gt;Declarative transaction management.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Make a Web Service with Spring MVC and Test with Spring Test Framework</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/spring%20test%20framework/2013/06/12/how-to-make-a-web-service-with-spring-mvc-and-test-with-spring-test-framework"/>
   <updated>2013-06-12T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/rest/spring%20test%20framework/2013/06/12/how-to-make-a-web-service-with-spring-mvc-and-test-with-spring-test-framework</id>
   <content type="html">&lt;h3 id=&quot;springmvc-rest-test&quot;&gt;SpringMVC-rest-test&lt;/h3&gt;

&lt;p&gt;This is a very basic example of using Spring MVC, REST and Spring Test Framework using Spring’s Java configuration.&lt;/p&gt;

&lt;p&gt;The first part of this is to create a configuration class for the web app.  below is a sample of the configuration class we are going to use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableWebMvc
@ComponentScan(basePackages = {&quot;com.johnathanmsmith.mvc.web&quot;})
public class WebMVCConfiguration extends WebMvcConfigurerAdapter
{

    private static final Logger logger = LoggerFactory.getLogger(WebMVCConfiguration.class);

    @Bean
    public ViewResolver resolver()
    {
        UrlBasedViewResolver url = new UrlBasedViewResolver();
        url.setPrefix(&quot;/views/&quot;);
        url.setViewClass(JstlView.class);
        url.setSuffix(&quot;.jsp&quot;);
        return url;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry)
    {
        logger.debug(&quot;setting up resource handlers&quot;);
        registry.addResourceHandler(&quot;/resources/&quot;).addResourceLocations(&quot;/resources/**&quot;);
    }

    @Override
    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer)
    {
        logger.debug(&quot;configureDefaultServletHandling&quot;);
        configurer.enable();
    }

    @Bean
    public SimpleMappingExceptionResolver simpleMappingExceptionResolver()
    {
        SimpleMappingExceptionResolver b = new SimpleMappingExceptionResolver();

        Properties mappings = new Properties();
        mappings.put(&quot;org.springframework.web.servlet.PageNotFound&quot;, &quot;p404&quot;);
        mappings.put(&quot;org.springframework.dao.DataAccessException&quot;, &quot;dataAccessFailure&quot;);
        mappings.put(&quot;org.springframework.transaction.TransactionException&quot;, &quot;dataAccessFailure&quot;);
        b.setExceptionMappings(mappings);
        return b;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next you have to setup the web.xml file to use the above configuration class, we do this but setting the contectConfigLocation to the package of the configuration class. see below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;
         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;
         version=&quot;2.5&quot;&amp;gt;

    &amp;lt;servlet&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextClass&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;org.springframework.web.context.support.AnnotationConfigWebApplicationContext&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;com.johnathanmsmith.mvc.web.config, com.johnathanmsmith.mvc.web.controller&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
    &amp;lt;/servlet&amp;gt;

    &amp;lt;servlet-mapping&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/servlet-mapping&amp;gt;
&amp;lt;/web-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets setup a basic controller to display a page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Controller
@RequestMapping(&quot;/json&quot;)
class JSonController
{

    private static final Logger logger = LoggerFactory.getLogger(JSonController.class);


    @RequestMapping(value = &quot;/{name}&quot;, method = RequestMethod.GET)
    @ResponseBody
    public User getName(@PathVariable String name, ModelMap model) throws ResourceNotFoundException
    {

        logger.debug(&quot;I am in the controller and got user name: &quot; + name);

        /*

            Simulate a successful lookup for 2 users, this is where your real lookup code would go

         */

        if (&quot;JohnathanMarkSmith&quot;.equals(name))
        {
            return new User(&quot;Johnathan Mark Smith&quot;, name);
        }

        if (&quot;Regan&quot;.equals(name))
        {
            return new User(&quot;Regan Smith&quot;, name);
        }

        throw new ResourceNotFoundException(&quot;User Is Not Found&quot;);
    }

    @RequestMapping(value = &quot;/&quot;, method = RequestMethod.GET)
    @ResponseBody
    public ResponseEntity&amp;lt;User&amp;gt; getDisplayDefault(ModelMap model)
    {
        return new ResponseEntity&amp;lt;User&amp;gt;(new User(&quot;Johnathan Mark Smith&quot;, &quot;JohnathanMarkSmith&quot;), HttpStatus.OK);
    }

    @ExceptionHandler
    @ResponseBody
    public ResponseEntity&amp;lt;ErrorHolder&amp;gt; handle(ResourceNotFoundException e)
    {
        logger.warn(&quot;The resource was not found&quot;, e);
        return new ResponseEntity&amp;lt;ErrorHolder&amp;gt;(new ErrorHolder(&quot;The resource was not found&quot;), HttpStatus.NOT_FOUND);
    }

}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;testing-your-web-service&quot;&gt;Testing Your Web Service&lt;/h2&gt;

&lt;p&gt;Below you will see the Spring Test Framework and how to tell your web server with it&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(classes = {WebMVCConfiguration.class})
@WebAppConfiguration
public class TestHelloWorldWeb
{
    @Autowired
    private WebApplicationContext wac;

    private MockMvc mockMvc;

    @Before
    public void setup()
    {
        this.mockMvc = MockMvcBuilders.webAppContextSetup(this.wac).build();
    }

    @Test
    public void getFoo() throws Exception
    {
        /*
            This following code will do 'GET' to the web apps
            and also that it has a attribute &quot;user&quot; to &quot;JohnathanMarkSmith&quot;

         */
        this.mockMvc.perform(get(&quot;/json/JohnathanMarkSmith&quot;)
                .accept(MediaType.APPLICATION_JSON))
                .andExpect(status().isOk())
                .andExpect(jsonPath(&quot;$.user&quot;).value(&quot;Johnathan Mark Smith&quot;));
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats all it takes..&lt;/p&gt;

&lt;h2 id=&quot;getting-the-project-and-running-it&quot;&gt;Getting The Project and Running It&lt;/h2&gt;

&lt;p&gt;To get this project and run it you will need to follow the following steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone  git@github.com:JohnathanMarkSmith/springmvc-rest-test.git
cd springmvc-rest-test/
mvn tomcat7:run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open your web brower and goto http://127.0.0.1:8080/springmvc-rest-test/&lt;/p&gt;

&lt;p&gt;This its… Have run with it…&lt;/p&gt;

&lt;object width=&quot;640&quot; height=&quot;480&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/fcMI6HsBPvk?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/fcMI6HsBPvk?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;640&quot; height=&quot;480&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What are inner class and anonymous class?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/11/java-interview-question-what-are-inner-class-and-anonymous-class"/>
   <updated>2013-06-11T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/11/java-interview-question-what-are-inner-class-and-anonymous-class</id>
   <content type="html">&lt;h3 id=&quot;inner-class&quot;&gt;Inner class:&lt;/h3&gt;

&lt;p&gt;classes defined in other classes, including those defined in methods are called inner classes.&lt;/p&gt;

&lt;p&gt;An inner class can have any accessibility including private.&lt;/p&gt;

&lt;h3 id=&quot;anonymous-class&quot;&gt;Anonymous class:&lt;/h3&gt;

&lt;p&gt;Anonymous class is a class defined inside a method without a name and is instantiated and declared in the same place and cannot have explicit constructors.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use Spring's Java Configuration (JavaConfig) style with Spring MVC Web</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/2013/06/06/how-to-use-springs-java-configuration-javaconfig-style-with-spring-mvc-web"/>
   <updated>2013-06-06T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/spring%20mvc/web/2013/06/06/how-to-use-springs-java-configuration-javaconfig-style-with-spring-mvc-web</id>
   <content type="html">&lt;h3 id=&quot;springmvc-helloworld&quot;&gt;SpringMVC-helloworld&lt;/h3&gt;

&lt;p&gt;This is a very basic example of using Spring MVC with JavaConfig to make a helloworld web apps.&lt;/p&gt;

&lt;p&gt;The first part of this is to create a configuration class for the web app.  below is a sample of the configuration class we are going to use:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableWebMvc
@ComponentScan(basePackages = {&quot;com.johnathanmsmith.mvc.web&quot;})
public class WebMVCConfig extends WebMvcConfigurerAdapter
{

    private static final Logger logger = LoggerFactory.getLogger(WebMVCConfig.class);

    @Bean
    public ViewResolver resolver()
    {
        UrlBasedViewResolver url = new UrlBasedViewResolver();
        url.setPrefix(&quot;/views/&quot;);
        url.setViewClass(JstlView.class);
        url.setSuffix(&quot;.jsp&quot;);
        return url;
    }

    @Override
    public void addResourceHandlers(ResourceHandlerRegistry registry)
    {
        logger.debug(&quot;setting up resource handlers&quot;);
        registry.addResourceHandler(&quot;/resources/&quot;).addResourceLocations(&quot;/resources/**&quot;);
    }

    @Override
    public void configureDefaultServletHandling(DefaultServletHandlerConfigurer configurer)
    {
        logger.debug(&quot;configureDefaultServletHandling&quot;);
        configurer.enable();
    }

    @Bean
    public SimpleMappingExceptionResolver simpleMappingExceptionResolver()
    {
        SimpleMappingExceptionResolver b = new SimpleMappingExceptionResolver();

        Properties mappings = new Properties();
        mappings.put(&quot;org.springframework.web.servlet.PageNotFound&quot;, &quot;p404&quot;);
        mappings.put(&quot;org.springframework.dao.DataAccessException&quot;, &quot;dataAccessFailure&quot;);
        mappings.put(&quot;org.springframework.transaction.TransactionException&quot;, &quot;dataAccessFailure&quot;);
        b.setExceptionMappings(mappings);
        return b;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next you have to setup the web.xml file to use the above configuration class, we do this but setting the contectConfigLocation to the package of the configuration class. see below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;
         xmlns=&quot;http://java.sun.com/xml/ns/javaee&quot;
         xsi:schemaLocation=&quot;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd&quot;
         version=&quot;2.5&quot;&amp;gt;

    &amp;lt;servlet&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;servlet-class&amp;gt;org.springframework.web.servlet.DispatcherServlet&amp;lt;/servlet-class&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextClass&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;org.springframework.web.context.support.AnnotationConfigWebApplicationContext&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;init-param&amp;gt;
            &amp;lt;param-name&amp;gt;contextConfigLocation&amp;lt;/param-name&amp;gt;
            &amp;lt;param-value&amp;gt;com.johnathanmsmith.mvc.web.config, com.johnathanmsmith.mvc.web.controller&amp;lt;/param-value&amp;gt;
        &amp;lt;/init-param&amp;gt;
        &amp;lt;load-on-startup&amp;gt;1&amp;lt;/load-on-startup&amp;gt;
    &amp;lt;/servlet&amp;gt;

    &amp;lt;servlet-mapping&amp;gt;
        &amp;lt;servlet-name&amp;gt;Spring MVC Dispatcher Servlet&amp;lt;/servlet-name&amp;gt;
        &amp;lt;url-pattern&amp;gt;/&amp;lt;/url-pattern&amp;gt;
    &amp;lt;/servlet-mapping&amp;gt;
&amp;lt;/web-app&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets setup a basic controller to display a page:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Controller
@RequestMapping(&quot;/ask&quot;)
class IndexController
{

    private static final Logger logger = LoggerFactory.getLogger(IndexController.class);

    @RequestMapping(method = RequestMethod.GET)
    public String displayRequestPage()
    {
        /*
           I am going to display the helloworld.jsp page now :)
         */
        logger.debug(&quot;made it to controller&quot;);
        return &quot;helloworld&quot;;

    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats all it takes..&lt;/p&gt;

&lt;h2 id=&quot;getting-the-project-and-running-it&quot;&gt;Getting The Project and Running It&lt;/h2&gt;

&lt;p&gt;To get this project and run it you will need to follow the following steps:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone  git@github.com:JohnathanMarkSmith/springmvc-helloworld.git
cd springmvc-helloworld/
mvn tomcat7:run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now open your web brower and goto http://127.0.0.1:8080/springmvc-helloworld/&lt;/p&gt;

&lt;p&gt;This its… Have run with it…&lt;/p&gt;

&lt;p&gt;Here is the video..&lt;/p&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/L7flu2DAi9E?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/L7flu2DAi9E?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is an Object and how do you allocate memory to it?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/05/java-interview-question-what-is-an-object-and-how-do-you-allocate-memory-to-it"/>
   <updated>2013-06-05T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/05/java-interview-question-what-is-an-object-and-how-do-you-allocate-memory-to-it</id>
   <content type="html">&lt;p&gt;Object in Java is an instance of a class and it is a software unit that combines a structured set of data with a set of operations for inspecting and manipulating that data.&lt;/p&gt;

&lt;p&gt;When an object is created using new operator, memory is allocated to it.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What are Vector, Hashtable, LinkedList and Enumeration?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/04/java-interview-question-what-are-vector-hashtable-linkedlist-and-enumeration"/>
   <updated>2013-06-04T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/04/java-interview-question-what-are-vector-hashtable-linkedlist-and-enumeration</id>
   <content type="html">&lt;h3 id=&quot;vector&quot;&gt;Vector&lt;/h3&gt;

&lt;p&gt;The Vector class provides the capability to implement a growable array of objects.&lt;/p&gt;

&lt;h3 id=&quot;hashtable&quot;&gt;Hashtable&lt;/h3&gt;

&lt;p&gt;The Hashtable class implements a Hashtable data structure. A Hashtable indexes and stores objects in a dictionary using hash codes as the object’s keys.
Hash codes are integer values that identify objects.&lt;/p&gt;

&lt;h3 id=&quot;linkedlist&quot;&gt;LinkedList&lt;/h3&gt;

&lt;p&gt;Removing or inserting elements in the middle of an array can be done using LinkedList. A LinkedList stores each object in a separate link whereas an array stores object references in consecutive locations.&lt;/p&gt;

&lt;h3 id=&quot;enumeration&quot;&gt;Enumeration&lt;/h3&gt;

&lt;p&gt;An object that implements the Enumeration interface generates a series of elements, one at a time. It has two methods, namely hasMoreElements() and nextElement().&lt;/p&gt;

&lt;p&gt;HasMoreElemnts() tests if this enumeration has more elements and nextElement method returns successive elements of the series.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What are Transient and Volatile Modifiers?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/03/java-interview-question-what-are-transient-and-volatile-modifiers"/>
   <updated>2013-06-03T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/06/03/java-interview-question-what-are-transient-and-volatile-modifiers</id>
   <content type="html">&lt;p&gt;So What are Transient and Volatile Modifiers???????&lt;/p&gt;

&lt;p&gt;The Transient modifier applies to variables only and it is not stored as part of its object’s Persistent state. Transient variables are not serialized.&lt;/p&gt;

&lt;p&gt;The Volatile modifier applies to variables only and it tells the compiler that the variable modified by volatile can be changed unexpectedly by other parts of the program.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the difference between set and list?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/31/java-interview-question-what-is-the-difference-between-set-and-list"/>
   <updated>2013-05-31T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/31/java-interview-question-what-is-the-difference-between-set-and-list</id>
   <content type="html">&lt;p&gt;Set stores elements in an unordered way but does not contain duplicate elements, whereas list stores elements in an ordered way but may contain duplicate elements.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use JQuery BeautyTips (ToolTips) and Validation Plugins for Field Validation</title>
   <link href="http://johnathanmarksmith.com/jquery/javascript/2013/05/31/how-to-use-jquery-beautytips-tooltips-and-validation-plugins-for-field-validation"/>
   <updated>2013-05-31T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/jquery/javascript/2013/05/31/how-to-use-jquery-beautytips-tooltips-and-validation-plugins-for-field-validation</id>
   <content type="html">&lt;h3 id=&quot;jquery-tooltips-and-validation-example&quot;&gt;JQuery ToolTips and Validation Example&lt;/h3&gt;

&lt;p&gt;This is just a one JSP page example that demos some JQuery ToolTips and Validation stuff.  Yes I really did not have to use a JSP and tomcat7 but again this is only a one page example so why not… :)&lt;/p&gt;

&lt;p&gt;Before we get started with the coding of this example you can see a running &lt;a href=&quot;/jquery-example.html&quot; target=&quot;_blank&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;in my example I have some HTML code that looks like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div&amp;gt;
        &amp;lt;form id=&quot;myForm&quot;&amp;gt;
            &amp;lt;p&amp;gt;
                Gender:
                &amp;lt;label for=&quot;male&quot;&amp;gt;Male&amp;lt;/label&amp;gt;
                &amp;lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;male&quot; class=&quot;target&quot; title=&quot;Please enter your gender.&quot;&amp;gt;
                &amp;lt;label for=&quot;female&quot;&amp;gt;Female&amp;lt;/label&amp;gt;
                &amp;lt;input type=&quot;radio&quot; name=&quot;gender&quot; id=&quot;female&quot; class=&quot;target&quot; title=&quot;Please enter your gender.&quot;&amp;gt;

            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;firstName&quot;&amp;gt;First Name:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;firstName&quot; name=&quot;firstName&quot; class=&quot;target&quot; title=&quot;Please enter your first name.&quot; &amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;lastName&quot;&amp;gt;Last Name:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;lastName&quot; name=&quot;lastName&quot; class=&quot;target&quot; title=&quot;Please enter your last name.&quot; &amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;age&quot;&amp;gt;Age:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;age&quot; name=&quot;age&quot; class=&quot;target&quot; title=&quot;Please enter your age.&quot; &amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
            &amp;lt;/p&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I wanted to put some validation in to check that data was entered into the fields and why not use JQuery for it..&lt;/p&gt;

&lt;p&gt;I then made the following style sheet code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;style type=&quot;text/css&quot;&amp;gt;
                #errorContainer {
                    display: none;
                    overflow: auto;
                    background-color: #FFDDDD;
                    border: 1px solid #FF2323;
                    padding-top: 1;
                }

                #errorContainer label {
                    float: none;
                    width: auto;
                }

                input.error {
                    border: 1px solid #FF2323;
                }

         &amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is going to setup how the errors will look.  I then had to add a place on my page for the errors so I added the following div:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div id=&quot;errorContainer&quot;&amp;gt;
        &amp;lt;p&amp;gt;&amp;amp;nbsp;Please correct the following errors and try again:&amp;lt;/p&amp;gt;
        &amp;lt;ul /&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code is where JQuery will be displaying the errors.&lt;/p&gt;

&lt;h3 id=&quot;now-its-time-for-the-hard-work-&quot;&gt;Now its time for the HARD work :)&lt;/h3&gt;

&lt;p&gt;You need to add the JQuery, BeautyTips (ToolTips) and the Validate libs into your code by added the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script src=&quot;js/jquery.bt.min.js&quot; type=&quot;text/javascript&quot; charset=&quot;utf-8&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets add the JQuery/JavaScript code that will check the fields on the page.  As you can see from the code below I give JQuery the rules which is (field names, ranges) and the error messages to display.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
        $(function(){

            $('#myForm').validate({
                rules: {
                    firstName: &quot;required&quot;,
                    lastName: &quot;required&quot;,
                    age: {
                        required: true,
                        range: [18,70]
                    }
                },
                messages: {
                    firstName: &quot;Please enter your first name.&quot;,
                    lastName: &quot;Please enter your last name.&quot;,
                    age: {
                        required: &quot;Please enter your age.&quot;,
                        range: &quot;Your age must be between 21 and 55.&quot;
                    }
                },
                errorContainer: $('#errorContainer'),
                errorLabelContainer: $('#errorContainer ul'),
                wrapper: 'li'
            });

        });
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now test your code.. It works great but where are the tooltips?&lt;/p&gt;

&lt;h3 id=&quot;adding-beautytips-tooltips&quot;&gt;Adding BeautyTips (Tooltips)&lt;/h3&gt;

&lt;p&gt;Rewrite the javascipt code with the code below:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
    $(function(){

        $('#firstName').bt();
        $('#lastName').bt();
        $('#age').bt();
        $('#male').bt();
        $('#female').bt();

        $('#myForm').validate({
            rules: {
                firstName: &quot;required&quot;,
                lastName: &quot;required&quot;,
                gender: &quot;required&quot;,
                age: {
                    required: true,
                    range: [18,70]
                }
            },
            messages: {
                firstName: &quot;Please enter your first name.&quot;,
                lastName: &quot;Please enter your last name.&quot;,
                gender: &quot;Please enter your gender.&quot;,
                age: {
                    required: &quot;Please enter your age.&quot;,
                    range: &quot;Your age must be between 21 and 55.&quot;
                }
            },
            errorContainer: $('#errorContainer'),
            errorLabelContainer: $('#errorContainer ul'),
            wrapper: 'li'
        });

    });
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;you can see all that we added was:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$('#firstName').bt();
$('#lastName').bt();
$('#age').bt();
$('#male').bt();
$('#female').bt();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code tells Beautytips to add the tooltips&lt;/p&gt;

&lt;p&gt;You can see how easy it is to use JQuery, BeautyTips(ToolTips) and Validation…&lt;/p&gt;

&lt;h3 id=&quot;how-to-get-the-project-and-run-it&quot;&gt;How To Get The Project and Run It&lt;/h3&gt;

&lt;p&gt;checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/JQueryToolTipValidation.git
cd JQueryToolTipValidation
mvn tomcat7:run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then open http://localhost:8080/JQueryToolTipValidation.git/ in your browser and play around.. Go have fun….&lt;/p&gt;

&lt;p&gt;You can download the source code to this at my github project (https://github.com/JohnathanMarkSmith/JQueryToolTipValidation)&lt;/p&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/DdPHFplp4rI?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/DdPHFplp4rI?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: Can you have an inner class inside a method and what variables can you access?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/30/java-interview-question-can-you-have-an-inner-class-inside-a-method-and-what-variables-can-you-access"/>
   <updated>2013-05-30T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/30/java-interview-question-can-you-have-an-inner-class-inside-a-method-and-what-variables-can-you-access</id>
   <content type="html">&lt;p&gt;Yes, you can have a inner class inside a method and final variables can be accessed.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the difference between String and String Buffer</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/29/java-interview-question-what-is-the-difference-between-string-and-string-buffer"/>
   <updated>2013-05-29T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/29/java-interview-question-what-is-the-difference-between-string-and-string-buffer</id>
   <content type="html">&lt;p&gt;1) String objects are constants and immutable whereas StringBuffer objects are not.&lt;/p&gt;

&lt;p&gt;2) String class supports constant strings whereas StringBuffer class supports growable and modifiable strings.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is interface and its use</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/28/java-interview-question-what-is-interface-and-its-use"/>
   <updated>2013-05-28T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/28/java-interview-question-what-is-interface-and-its-use</id>
   <content type="html">&lt;p&gt;Interface is similar to a class which may contain method’s signature only but not bodies and it is a formal set of method and constant declarations that must be defined by the class that implements it.&lt;/p&gt;

&lt;p&gt;Interfaces are useful for:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;a)Declaring methods that one or more classes are expected to implement

b)Capturing similarities between unrelated classes without forcing a class relationship.

c)Determining an object’s programming interface without revealing the actual body of the class.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use Spring's Java Configuration (JavaConfig) style with Maven, JUnit, Log4J, Hibernate and HyperSQL (hsqldb)</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/maven/junit/log4j/hibernate/hypersql/2013/05/27/how-to-use-springs-java-configuration-javaconfig-style-with-maven-junit-log4j-hibernate-and-hypersql-hsqldb"/>
   <updated>2013-05-27T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/spring%20java%20configuration/maven/junit/log4j/hibernate/hypersql/2013/05/27/how-to-use-springs-java-configuration-javaconfig-style-with-maven-junit-log4j-hibernate-and-hypersql-hsqldb</id>
   <content type="html">&lt;h3 id=&quot;springs-java-configuration-javaconfig-style-with-maven-junit-log4j-hibernate-and-hypersql-hsqldb&quot;&gt;Spring’s Java Configuration (JavaConfig) style with Maven, JUnit, Log4J, Hibernate and HyperSQL (hsqldb)&lt;/h3&gt;

&lt;p&gt;The days of using MySQL, DB2, PostgreSQL etc for development is over.. I don’t know why any programmer would be developing using them..&lt;/p&gt;

&lt;p&gt;Every deveroper should be running some in memory database like HSQLDB as part of the project for development and testing then move the a full size database for unit testing, staging and production.&lt;/p&gt;

&lt;p&gt;This is a sample Spring Project to show how to use Spring’s Java Configuration (JavaConfig) style with Maven, JUnit, Log4J, Hibernate and HyperSQL (hsqldb).&lt;/p&gt;

&lt;p&gt;This example also will show how to use @PropertySource for reading properties and using the Environment Object to add properties to your objects.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-springs-java-configuration-javaconfig-style-and-not-xml-files-for-configuation&quot;&gt;How to use Spring’s Java Configuration (JavaConfig) style and not XML files for configuation&lt;/h3&gt;

&lt;p&gt;Consider replacing Spring XML configuration with Spring’s Java Configuration (JavaConfig) style is the right way to go right now.&lt;/p&gt;

&lt;p&gt;Using Spring XML configuration is so 2000’s the time has come to push the XML away and look at Spring’s Java Configuration (JavaConfig) style.&lt;/p&gt;

&lt;p&gt;Here is the main code to my sample project&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; public static void main(String[] args)
    {
        /**
         *
         * This is going to setup the database configuration in the applicationContext
         * you can see that I am using the new Spring's Java Configuration style and not some OLD XML file
         *
         */
        ApplicationContext context = new AnnotationConfigApplicationContext(DatabaseConfiguration.class);

        MessageService mService = context.getBean(MessageService.class);

        /**
         *
         *   This is going to create a message object and set the message to &quot;Hello World&quot; then pass the object to t
         *   the service layer for inserting into the database
         *
         */
        Message message = new Message();
        message.setMessage(&quot;Hello World&quot;);
        mService.SaveMessage(message);


        /**
         *
         * This is going to do a 2nd Message in database.
         *
         */
        message.setMessage(&quot;I love Regan&quot;);
        mService.SaveMessage(message);

        /**
         *
         * This is going to get the messages from database and do the following:
         *    - display number of message(s)
         *    - display each message in database
         *
         */
        List&amp;lt;Message&amp;gt; myList = mService.listMessages();
        LOGGER.debug(&quot;You Have &quot; + myList.size() + &quot; Message(s) In The Database&quot;);

        for (Message i : myList)
        {
            LOGGER.debug(&quot;Message: ID: &quot; + i.getId() + &quot;, Message: &quot; + i.getMessage() + &quot;.&quot;);
        }

        /**
         *
         * This is the end!!!
         *
         */
        LOGGER.debug(&quot;This is the end!!!!&quot;);
    }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets take a good look at how I setup the database with Spring’s Java Configuration (JavaConfig) style and not in a XML file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableTransactionManagement
@ComponentScan(basePackageClasses = {Main.class})
@PropertySource(&quot;classpath:application.properties&quot;)
public class DatabaseConfiguration
{


    /**
     *
     * This is used to setup the database. It will load the schema.sql file which does a create table so we have
     * a table to work with in the project
     */
    @Bean
    public DataSourceInitializer dataSourceInitializer(DataSource dataSource)
    {
        ResourceDatabasePopulator resourceDatabasePopulator = new ResourceDatabasePopulator();
        resourceDatabasePopulator.addScript(new ClassPathResource(&quot;/schema.sql&quot;));

        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();
        dataSourceInitializer.setDataSource(dataSource);
        dataSourceInitializer.setDatabasePopulator(resourceDatabasePopulator);
        return dataSourceInitializer;
    }

    /**
     *
     * This will be setting up a datasource using HyperSQL (hsqldb) in memory
     */
    @Bean
    public DataSource hsqlDataSource()
    {
        BasicDataSource basicDataSource = new BasicDataSource();
        basicDataSource.setDriverClassName(org.hsqldb.jdbcDriver.class.getName());
        basicDataSource.setUsername(&quot;sa&quot;);
        basicDataSource.setPassword(&quot;&quot;);
        basicDataSource.setUrl(&quot;jdbc:hsqldb:mem:mydb&quot;);
        return basicDataSource;
    }

    /**
     *
     * This setups the session factory
     */
    @Bean
    public LocalSessionFactoryBean sessionFactory(Environment environment,
                                                  DataSource dataSource)
    {

        /**
         *
         * Getting packageOfModelBean from package of message bean
         *
         */
        String packageOfModelBeans = Message.class.getPackage().getName();

        LocalSessionFactoryBean factoryBean = new LocalSessionFactoryBean();

        factoryBean.setDataSource(dataSource);
        factoryBean.setHibernateProperties(buildHibernateProperties(environment));
        factoryBean.setPackagesToScan(packageOfModelBeans);
        return factoryBean;
    }

    /**
     *
     * Loading all the hibernate properties from a properties file
     */
    protected Properties buildHibernateProperties(Environment env)
    {
        Properties hibernateProperties = new Properties();

        hibernateProperties.setProperty(&quot;hibernate.dialect&quot;, env.getProperty(&quot;hibernate.dialect&quot;));
        hibernateProperties.setProperty(&quot;hibernate.show_sql&quot;, env.getProperty(&quot;hibernate.show_sql&quot;));
        hibernateProperties.setProperty(&quot;hibernate.use_sql_comments&quot;, env.getProperty(&quot;hibernate.use_sql_comments&quot;));
        hibernateProperties.setProperty(&quot;hibernate.format_sql&quot;, env.getProperty(&quot;hibernate.format_sql&quot;));
        hibernateProperties.setProperty(&quot;hibernate.hbm2ddl.auto&quot;, env.getProperty(&quot;hibernate.hbm2ddl.auto&quot;));

        hibernateProperties.setProperty(&quot;hibernate.generate_statistics&quot;, env.getProperty(&quot;hibernate.generate_statistics&quot;));

        hibernateProperties.setProperty(&quot;javax.persistence.validation.mode&quot;, env.getProperty(&quot;javax.persistence.validation.mode&quot;));

        //Audit History flags
        hibernateProperties.setProperty(&quot;org.hibernate.envers.store_data_at_delete&quot;, env.getProperty(&quot;org.hibernate.envers.store_data_at_delete&quot;));
        hibernateProperties.setProperty(&quot;org.hibernate.envers.global_with_modified_flag&quot;, env.getProperty(&quot;org.hibernate.envers.global_with_modified_flag&quot;));

        return hibernateProperties;
    }

    /**
     *
     * This is setting up the hibernate transaction manager
     *
     */
    @Bean
    public HibernateTransactionManager hibernateTransactionManager(SessionFactory sessionFactory)
    {
        return new HibernateTransactionManager(sessionFactory);
    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see how easy it is to use Spring’s Java Configuration (JavaConfig) style and Not XML.. The time of using XML files with Springs is over…&lt;/p&gt;

&lt;p&gt;You can see the project on github at &lt;a href=&quot;https://github.com/JohnathanMarkSmith/NoMySQL&quot;&gt;https://github.com/JohnathanMarkSmith/NoMySQL&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;download-and-run&quot;&gt;Download and Run&lt;/h3&gt;

&lt;p&gt;So now its time to download the project from github and run it, You need to do the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/NoMySQL.git
cd NoMySQL
mvn package
cd target
java -jar NoMySQL.jar
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Thats it and you should see the following line on the console:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2013-05-24 08:28:23,401 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - You Have 2 Message(s) In The Database
2013-05-24 08:28:23,401 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - Message: ID: 1, Message: Hello World.
2013-05-24 08:28:23,401 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - Message: ID: 2, Message: I love Regan.
2013-05-24 08:28:23,401 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - This is the end!!!! This Project is using Java, Spring, Hibernate, Maven, jUnit, Log4J, HSQLDB and Github.
&lt;/code&gt;&lt;/pre&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/LC6mnUcnWEg?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/LC6mnUcnWEg?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Use JQuery Validation Plugin for Field Validatoin</title>
   <link href="http://johnathanmarksmith.com/jquery/javascript/2013/05/24/how-to-use-jquery-validation-plugin-for-field-validatoin"/>
   <updated>2013-05-24T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/jquery/javascript/2013/05/24/how-to-use-jquery-validation-plugin-for-field-validatoin</id>
   <content type="html">&lt;h3 id=&quot;jquery-validation-example&quot;&gt;JQuery Validation Example&lt;/h3&gt;

&lt;p&gt;This is just a one JSP page example that demos some JQuery Validation stuff.  Yes I really did not have to use a JSP and tomcat7 but again this is only a one page example so why not… :)&lt;/p&gt;

&lt;p&gt;in my example I have some HTML code that looks like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div&amp;gt;
        &amp;lt;form id=&quot;myForm&quot;&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;firstName&quot;&amp;gt;First Name:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;firstName&quot; name=&quot;firstName&quot;&amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;lastName&quot;&amp;gt;Last Name:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;lastName&quot; name=&quot;lastName&quot;&amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;label for=&quot;age&quot;&amp;gt;Age:&amp;lt;/label&amp;gt;
                &amp;lt;input id=&quot;age&quot; name=&quot;age&quot;&amp;gt;&amp;lt;/input&amp;gt;
            &amp;lt;/p&amp;gt;
            &amp;lt;p&amp;gt;
                &amp;lt;input type=&quot;submit&quot; value=&quot;Submit&quot; /&amp;gt;
            &amp;lt;/p&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I wanted to put some validation in to check that data was entered into the fields and why not use JQuery for it..&lt;/p&gt;

&lt;p&gt;I then made the following style sheet code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;        &amp;lt;style type=&quot;text/css&quot;&amp;gt;
                #errorContainer {
                    display: none;
                    overflow: auto;
                    background-color: #FFDDDD;
                    border: 1px solid #FF2323;
                    padding-top: 1;
                }

                #errorContainer label {
                    float: none;
                    width: auto;
                }

                input.error {
                    border: 1px solid #FF2323;
                }

         &amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is going to setup how the errors will look.  I then had to add a place on my page for the errors so I added the following div:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;div id=&quot;errorContainer&quot;&amp;gt;
        &amp;lt;p&amp;gt;&amp;amp;nbsp;Please correct the following errors and try again:&amp;lt;/p&amp;gt;
        &amp;lt;ul /&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above code is where JQuery will be displaying the errors.&lt;/p&gt;

&lt;h3 id=&quot;now-its-time-for-the-hard-work-&quot;&gt;Now its time for the HARD work :)&lt;/h3&gt;

&lt;p&gt;You need to add the JQuery and the Validate libs into your code by added the following lines:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.aspnetcdn.com/ajax/jQuery/jquery-1.7.2.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
    &amp;lt;script type=&quot;text/javascript&quot; src=&quot;http://ajax.aspnetcdn.com/ajax/jquery.validate/1.9/jquery.validate.min.js&quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets add the JQuery/JavaScript code that will check the fields on the page.  As you can see from the code below I give JQuery the rules which is (field names, ranges) and the error messages to display.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    &amp;lt;script type=&quot;text/javascript&quot;&amp;gt;
        $(function(){

            $('#myForm').validate({
                rules: {
                    firstName: &quot;required&quot;,
                    lastName: &quot;required&quot;,
                    age: {
                        required: true,
                        range: [18,70]
                    }
                },
                messages: {
                    firstName: &quot;Please enter your first name.&quot;,
                    lastName: &quot;Please enter your last name.&quot;,
                    age: {
                        required: &quot;Please enter your age.&quot;,
                        range: &quot;Your age must be between 21 and 55.&quot;
                    }
                },
                errorContainer: $('#errorContainer'),
                errorLabelContainer: $('#errorContainer ul'),
                wrapper: 'li'
            });

        });
    &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;THAT’S IT!!!! IT WAS SO EAST TO USE JQUERY VALIDATION ON A FORM IN A WEB PAGE!!!&lt;/p&gt;

&lt;p&gt;You can see how easy it is to use JQuery Validation…&lt;/p&gt;

&lt;h3 id=&quot;how-to-get-the-project-and-run-it&quot;&gt;How To Get The Project and Run It&lt;/h3&gt;

&lt;p&gt;checkout the project from github.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:JohnathanMarkSmith/JQueryValidation.git
cd JQueryValidation
mvn tomcat7:run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then open http://localhost:8080/JQueryValidation/ in your browser and play around.. Go have fun….&lt;/p&gt;

&lt;p&gt;You can download the source code to this at my github project (https://github.com/JohnathanMarkSmith/JQueryValidation)&lt;/p&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Ju_74SWv1TY?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/Ju_74SWv1TY?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How To Install Gitolite on Linux</title>
   <link href="http://johnathanmarksmith.com/git/gitolite/linux/2013/05/23/how-to-install-gitolite-on-linux"/>
   <updated>2013-05-23T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/gitolite/linux/2013/05/23/how-to-install-gitolite-on-linux</id>
   <content type="html">&lt;h3 id=&quot;why-gitolite&quot;&gt;Why Gitolite&lt;/h3&gt;

&lt;p&gt;Git by itself does not do any access control – it relies on the transport medium to do authentication (“who are you?”), and on OS file permissions to do authorisation (“what are you allowed to do?”).&lt;/p&gt;

&lt;p&gt;Git also comes with a program called “git-shell” which can act as a restricted login shell if you don’t want users getting a proper shell. Using this and judicious use of Unix groups, you can allow some people read-only access while others get read-write access, etc. This is probably sufficient if your needs are simple and don’t change too often.&lt;/p&gt;

&lt;p&gt;However, gitolite does this much better, and offers many more features&lt;/p&gt;

&lt;p&gt;Gitolite is useful in any server that is going to host multiple git repositories, each with many developers, where “anyone can do anything to any repo” is not a good idea….&lt;/p&gt;

&lt;p&gt;Giteolite will let you pick which developers have access to which repositories and which branches and more…. Gitolite, Gitolite, Gitolite it will save you!!!&lt;/p&gt;

&lt;h3 id=&quot;how-to-install-gitolite-on-linux&quot;&gt;How To Install Gitolite on Linux&lt;/h3&gt;

&lt;p&gt;Login in as root&lt;/p&gt;

&lt;p&gt;now you have to create the git(make it git or gitolite) account&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;useradd git
    passwd git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now login as git or gitolite&lt;/p&gt;

&lt;p&gt;You need to copy your SSH public key (a file called ~/.ssh/id_rsa.pub) from your workstation, renaming it to yourname.pub (we’ll use jsmith.pub in our examples).&lt;/p&gt;

&lt;p&gt;From my workstations&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;scp ~/.ssh/id_rsa.pub git@REGAN:/home/git/jsmith.pub&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now run the following commands from the git account&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git://github.com/sitaramc/gitolite
   mkdir bin
   gitolite/install -ln
   gitolite setup -pk jsmith.pub&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;now-for-testing&quot;&gt;Now for Testing&lt;/h3&gt;

&lt;p&gt;From your workstation enter the following command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ssh git@REGAN info&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;your output should look something like this&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;hello jsmith, this is git@regan running gitolite3 v3.5.1-4-g2f48a3e on git 1.8.2.3

    R W		gitolite-admin
    R W		testing&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;time-to-be-a-gitolite-admin&quot;&gt;Time To Be a Gitolite Admin&lt;/h3&gt;

&lt;p&gt;From your workstation enter the following command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@&amp;lt;server&amp;gt;:gitolite-admin
   &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;gitolite-admin&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That is everything you have gitolite all setup and ready to go.&lt;/p&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/7ZnSjIJoook?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/7ZnSjIJoook?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>I was published in 'This Week in Spring' on how to use Spring's Java Configuration Style</title>
   <link href="http://johnathanmarksmith.com/spring/0%20java/javaconfig/programming/spring%20java%20configuration/2013/05/22/i-was-published-in-this-week-in-spring-on-how-to-use-springs-java-configuration-style"/>
   <updated>2013-05-22T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/0%20java/javaconfig/programming/spring%20java%20configuration/2013/05/22/i-was-published-in-this-week-in-spring-on-how-to-use-springs-java-configuration-style</id>
   <content type="html">&lt;p&gt;Yahooooooooo…… I was published in ‘This Week in Spring’ on how to use Spring’s Java Configuration Style.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;/images/springsource.jpg&quot; alt=&quot;Installing Jboss on Linux with Johnathan Mark Smith&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Below is the example that was posted:&lt;/p&gt;

&lt;p&gt;Consider replacing Spring XML configuration with JavaConfig&lt;/p&gt;

&lt;p&gt;Using Spring XML configuration is so 2000’s the time has come to push the XML away and look at JavaConfig.&lt;/p&gt;

&lt;p&gt;Here is the main code to my sample project&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;public class Main
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    private static final Logger &lt;span class=&quot;nv&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; getLogger&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Main.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    public static void main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; args&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        // in this setup, both the main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; method and the JUnit method both specify that
        ApplicationContext &lt;span class=&quot;nv&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new AnnotationConfigApplicationContext&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; HelloWorldConfiguration.class &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        MessageService &lt;span class=&quot;nv&quot;&gt;mService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; context.getBean&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MessageService.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        HelloWorld &lt;span class=&quot;nv&quot;&gt;helloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; context.getBean&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HelloWorld.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Displaying default messgae
         */
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message from HelloWorld Bean: &amp;quot;&lt;/span&gt; + helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         *   Saving Message to database
         */
        Message &lt;span class=&quot;nv&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new Message&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        message.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        mService.SaveMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Settting new message in bean
         */
        helloWorld.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;I am in Staten Island, New York&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message from HelloWorld Bean: &amp;quot;&lt;/span&gt; + helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Saving Message in database.
         */
        message.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        mService.SaveMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Getting messages from database
         *    - display number of message&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
         *    - display each message in database
         */
        List&amp;lt;Message&amp;gt; &lt;span class=&quot;nv&quot;&gt;myList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mService.listMessages&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;You Have &amp;quot;&lt;/span&gt; + myList.size&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot; Message(s) In The Database&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Message i : myList&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message: ID: &amp;quot;&lt;/span&gt; + i.getId&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot;, Message: &amp;quot;&lt;/span&gt; + i.getMessage&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see from this code that the ApplicationContext is mapped to a HelloWorldConfig.class file its not using a XML file.  Below is the code to the HelloWorldConfig.class.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/**
 * Date:   4/25/13 / 9:37 AM
 * Author: Johnathan Mark Smith
 * Email:  john@johnathanmarksmith.com
 * &amp;lt;p/&amp;gt;
 * Comments:
 *    This is the config example of how to use JavaConfig and not XML Files:
 *
 *    This Would be the same as the following
 *    &amp;lt;beans&amp;gt;
 *       &amp;lt;bean &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;helloWorld&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;com.johnathanmarksmith.HelloSpringJavaBasedJavaConfig.bean.HelloWorld&amp;quot;&lt;/span&gt; /&amp;gt;
 *    &amp;lt;/beans&amp;gt;
 *
 */

@Configuration
@Import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DatabaseConfiguration.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
@ComponentScan
@PropertySource&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;classpath:application.properties&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
public class HelloWorldConfiguration &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    @Bean
    public HelloWorld getHelloWorld&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Environment env&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        HelloWorld &lt;span class=&quot;nv&quot;&gt;hw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new HelloWorld&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        hw.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;env.getProperty&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bean.text&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; hw&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see how easy it is to use JavaConfig and Not XML..&lt;/p&gt;

&lt;p&gt;You can download the source code to this at my github project.
&lt;a href=&quot;https://github.com/JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig&quot;&gt;https://github.com/JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that’s it. have fun with Spring JavaConfig.&lt;/p&gt;

&lt;h3 id=&quot;down-and-run-project&quot;&gt;Down and Run Project&lt;/h3&gt;

&lt;p&gt;If you would like to download the project from GitHub and run it just follow the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;HelloSpringJavaBasedJavaConfig
mvn packge
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target
java -jar HelloSpringJavaBasedJavaConfig.jar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;LIFE IS SO EASY WORKING WITH GIT, MAVEN, SPRING….&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/cfTY4LpZtf4?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/cfTY4LpZtf4?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the role of the clone() method in Java</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/21/java-interview-question-what-is-the-role-of-the-clone-method-in-java"/>
   <updated>2013-05-21T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/21/java-interview-question-what-is-the-role-of-the-clone-method-in-java</id>
   <content type="html">&lt;p&gt;Protected Object clone() throws CloneNotSupportedException.&lt;/p&gt;

&lt;p&gt;This method is used to create a copy of an object of a class which implements Cloneable interface.&lt;/p&gt;

&lt;p&gt;By default it does field-by-field copy as the Object class doesn’t have any idea in advance about the members of the particular class whose objects call this method. So, if the class has only primitive data type members then a completely new copy of the object will be created and the reference to the new object copy will be returned. But, if the class contains members of any class type then only the object references to those members are copied and hence the member references in both the original object as well as the cloned object refer to the same object.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is final, finalize() and finally</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/21/java-interview-question-what-is-final-finalize-and-finally"/>
   <updated>2013-05-21T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/21/java-interview-question-what-is-final-finalize-and-finally</id>
   <content type="html">&lt;p&gt;Final : final keyword can be used for class, method and variables. A final class cannot be subclassed and it prevents other programmers from subclassing a secure class to invoke insecure methods. A final method can’t be overridden. A final variable can’t change from its initialized value.&lt;/p&gt;

&lt;p&gt;Finalize() : finalize() method is used just before an object is destroyed and can be called just prior to garbage collection.&lt;/p&gt;

&lt;p&gt;Finally : finally, a key word used in exception handling, creates a block of code that will be executed after a try/catch block has completed and before the code following the try/catch block. The finally block will execute whether or not an exception is thrown. For example, if a method opens a file upon exit, then you will not want the code that closes the file to be bypassed by the exception-handling mechanism. This finally keyword is designed to address this contingency.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the difference between Array and Vector</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/20/java-interview-question-what-is-the-difference-between-array-and-vector"/>
   <updated>2013-05-20T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/20/java-interview-question-what-is-the-difference-between-array-and-vector</id>
   <content type="html">&lt;p&gt;Array is a set of related data type and static whereas vector is a growable array of objects and dynamic.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: Can a final class have a abstract method</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/17/java-interview-question-can-a-final-class-have-a-abstract-method"/>
   <updated>2013-05-17T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/17/java-interview-question-can-a-final-class-have-a-abstract-method</id>
   <content type="html">&lt;p&gt;No. I final class can not have a abstract method in it because when you declare a method in a class as abstract, then the class must be declared as abstract.&lt;/p&gt;

&lt;p&gt;“Final” and “Abstract” cannot used at the same time. Any class can be either final or abstract not both!&lt;/p&gt;

&lt;p&gt;Final class means cannot be subclassed.
   Abstract class means must be subclassed.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the difference between this() and super()</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/16/java-interview-question-what-is-the-difference-between-this-and-super"/>
   <updated>2013-05-16T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/16/java-interview-question-what-is-the-difference-between-this-and-super</id>
   <content type="html">&lt;p&gt;this() can be used to invoke a constructor or method of the same class whereas super() can be used to invoke a super class constructor or method.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What is the difference between overloading and overriding</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/15/java-interview-question-what-is-the-difference-between-overloading-and-overriding"/>
   <updated>2013-05-15T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/15/java-interview-question-what-is-the-difference-between-overloading-and-overriding</id>
   <content type="html">&lt;p&gt;a) In overloading, there is a relationship between methods available in the same class whereas in overriding, there is relationship between a superclass method and subclass method. &lt;/p&gt;

&lt;p&gt;b) Overloading does not block inheritance from the superclass whereas overriding blocks inheritance from the superclass. &lt;/p&gt;

&lt;p&gt;c) In overloading, separate methods share the same name whereas in overriding, subclass method replaces the superclass. &lt;/p&gt;

&lt;p&gt;d) Overloading must have different method signatures whereas overriding must have same signature.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Git 1.8.2 on Fedora, CentOS, Red Hat and Scientific Linux</title>
   <link href="http://johnathanmarksmith.com/linux/git/programming/2013/05/15/how-to-install-git-182-on-fedora-centos-red-hat-and-scientific-linux"/>
   <updated>2013-05-15T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/git/programming/2013/05/15/how-to-install-git-182-on-fedora-centos-red-hat-and-scientific-linux</id>
   <content type="html">&lt;p&gt;I always like to use YUM for installing software on Fedora, CentOS, Red Hat and Scientific Linux but someone times the RPM only have old versions of the software I need!&lt;/p&gt;

&lt;p&gt;Just Like Git… I need Git 1.8 for something (you dont need the details).  &lt;/p&gt;

&lt;p&gt;So I had to download the source for Git, Do a make and then install it and all this will only take about 15 mins… are you ready?&lt;/p&gt;

&lt;h3 id=&quot;time-to-download-make-and-install-git&quot;&gt;Time To Download, Make and Install Git&lt;/h3&gt;

&lt;p&gt;To download, make and install Git all you have to do is enter the following commands in a console that your have root access in&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install gettext-devel expat-devel curl-devel zlib-devel openssl-devel
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /usr/local/src
wget https://www.kernel.org/pub/software/scm/git/git-1.8.2.3.tar.gz
tar xzvf git-1.8.2.3.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;git-1.8.2.3
make &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local all
make &lt;span class=&quot;nv&quot;&gt;prefix&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local install&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;time-for-a-test&quot;&gt;Time For a Test&lt;/h3&gt;

&lt;p&gt;After the above is done you should check the version, type in the following command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git --version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Your output should look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git version 1.8.2.3
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;your-identity-tell-git-who-you-are&quot;&gt;Your Identity, Tell Git Who You Are&lt;/h3&gt;

&lt;p&gt;You need to tell git who you are, the following commands will setup your name and email address:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;config --global user.name &quot;John Doe&quot;
config --global user.email johndoe@example.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That’s it, your done!&lt;/p&gt;

&lt;p&gt;Here is the video:&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/oxI5vzil840?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/oxI5vzil840?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Interview Question: What are Encapsulation, Inheritance and Polymorphism?</title>
   <link href="http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/14/java-interview-question-what-are-encapsulation-inheritance-and-polymorphism"/>
   <updated>2013-05-14T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/java%20interview%20questions/2013/05/14/java-interview-question-what-are-encapsulation-inheritance-and-polymorphism</id>
   <content type="html">&lt;p&gt;Encapsulation is the mechanism that binds together code and data it manipulates and keeps both safe from outside interference and misuse. Inheritance is the process by which one object acquires the properties of another object. Polymorphism is the feature that allows one interface to be used for general class actions.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/java-interview-questions.html&quot;&gt;Java Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to share a local git repository on linux</title>
   <link href="http://johnathanmarksmith.com/linux/git/git%20interview%20question/2013/05/14/how-to-share-a-local-git-repository-on-linux"/>
   <updated>2013-05-14T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/git/git%20interview%20question/2013/05/14/how-to-share-a-local-git-repository-on-linux</id>
   <content type="html">&lt;p&gt;Sometimes you will find the need to share a local git repository with some of your co-workers without putting the reposiotry on a server.&lt;/p&gt;

&lt;h3 id=&quot;there-are-five-possibilities-to-set-up-a-repository-for-pull-from&quot;&gt;There are five possibilities to set up a repository for pull from&lt;/h3&gt;

&lt;p&gt;You have a number of ways to share your lcoal git repository with others.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Local filesystem: git clone /path/to/repo or git clone file://path/to/repo. Least work if you have networked filesystem, but not very efficient use of network. &lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;HTTP protocols: git clone http://example.com/repo. You need any web server, and you also need to run (perhaps automatically, from a hook) git-update-server-info to generate information required for fetching/pulling via “dumb” protocols.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;SSH: git clone ssh://example.com/srv/git/repo or git clone example.com:/srv/git/repo. You need to setup SSH server (SSH daemon), and have SSH installed on client (e.g. PuTTY on MS Windows).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;git protocol: git clone git://example.com/repo. You need to run git-daemon on server; see documentation for details (you can run it as standalone process only for fetching, not necessary run as service). git-daemon is a part of git.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;bundle: You generate bundle on server using git-bundle command, transfer it to a client machine in any way (even via USB), and clone using git clone file.bndl (if clone does not work, you can do “git init”, “git remote add” and “git fetch”).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;how-do-i-share-my-local-git-repository&quot;&gt;How do I share my local git repository&lt;/h3&gt;

&lt;p&gt;I like to share my local git repository but using the git-daemon. First I move to the folder that has all my repo’s in it and then I issue the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git daemon --export-all --base-path=$(pwd)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now to clone the shared repository, use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git://HOSTNAME/ REPOSITORY_NAME
# e.g., git clone git://my-machine/ test-project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That was easy right?&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/fCWVg6cmXyY?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/fCWVg6cmXyY?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/git-interview-questions.html&quot;&gt;Git Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Replacing MySQL with MariaDB on CentOS 6</title>
   <link href="http://johnathanmarksmith.com/linux/mysql/mariadb/2013/05/13/replacing-mysql-with-mariadb-on-centos-6"/>
   <updated>2013-05-13T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mysql/mariadb/2013/05/13/replacing-mysql-with-mariadb-on-centos-6</id>
   <content type="html">&lt;p&gt;Replacing MySQL with MariaDB on CentOS 6&lt;/p&gt;

&lt;p&gt;MariaDB is a high performance drop-in replacement for MySQL, developed by some of the original authors of the MySQL project. This will walk you through uninstalling MySQL and then installing MariaDB from their repository using the YUM package manager.&lt;/p&gt;

&lt;h3 id=&quot;warning-you-should-always-make-a-backup-of-any-databases-before-remove-mysql&quot;&gt;WARNING: YOU SHOULD ALWAYS MAKE A BACKUP OF ANY DATABASES BEFORE REMOVE MYSQL!!!&lt;/h3&gt;

&lt;p&gt;AND AGAIN….. WARNING: YOU SHOULD ALWAYS MAKE A BACKUP OF ANY DATABASES BEFORE REMOVE MYSQL!!!&lt;/p&gt;

&lt;h3 id=&quot;stop-mysql&quot;&gt;Stop MySQL&lt;/h3&gt;

&lt;p&gt;If you have MySQL installed and running its time to stop it by entering the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# service mysqld stop
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;removing-mysql&quot;&gt;Removing MySQL&lt;/h3&gt;

&lt;p&gt;Now its time to kiss MySQL goodbye by using the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# yum remove mysql*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;(The * is a wildcard, and tells YUM to remove all packages starting with the string “mysql”.)&lt;/p&gt;

&lt;p&gt;Now let’s add MariaDBs repository. Create the file /etc/yum.repos.d/MariaDB.repo by opening it in your favorite editor. 
We will use vi here, but nano might be easier if you are new to Linux (yum install nano, then nano -w filepath).&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# vi /etc/yum.repos.d/MariaDB.repo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Within the file we insert the following:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[mariadb]
name = MariaDB
baseurl = http://yum.mariadb.org/5.5/centos6-x86
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should note that the last part of the baseurl needs to match your CentOS version and arch. In my case this would need to be centos6-amd64, for a 64-bit install, but since x86 (32-bit) is more common I’ve left that in the example above.&lt;/p&gt;

&lt;p&gt;Save the file and exit your editor. (In vi this is done by holding Shif and pressing : (colon), entering “wq” (without the quotes) for “write quit”, and enter.) &lt;/p&gt;

&lt;h3 id=&quot;time-to-install-mariadb&quot;&gt;Time to install MariaDB&lt;/h3&gt;

&lt;p&gt;To install the components using YUM use the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# yum install MariaDB-server MariaDB-client
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;that-was-easy&quot;&gt;That Was Easy&lt;/h3&gt;

&lt;p&gt;Now that it is installed, let’s start the MariaDB service:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# service mysql start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see that the service is “mysql” NOT “mysqld” now.&lt;/p&gt;

&lt;h3 id=&quot;time-to-loadin-and-seee&quot;&gt;Time to Loadin and Seee&lt;/h3&gt;

&lt;p&gt;Let’s try to connect, shall we?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[root@regan ~]# mysql -u root -p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enter your database root password when promted.&lt;/p&gt;

&lt;p&gt;You should see something like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Welcome to the MariaDB monitor.  Commands end with &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; or &lt;span class=&quot;se&quot;&gt;\g&lt;/span&gt;.
Your MariaDB connection id is 1
Server version: 5.5.30-MariaDB MariaDB Server

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2000, 2013, Oracle, Monty Program Ab and others.

Type &lt;span class=&quot;s1&quot;&gt;&amp;#39;help;&amp;#39;&lt;/span&gt; or &lt;span class=&quot;s1&quot;&gt;&amp;#39;\h&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; help. Type &lt;span class=&quot;s1&quot;&gt;&amp;#39;\c&amp;#39;&lt;/span&gt; to clear the current input statement.

MariaDB &lt;span class=&quot;o&quot;&gt;[(&lt;/span&gt;none&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That was easy right?&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/EZe140Gj1qA?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/EZe140Gj1qA?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Basic install of JBoss for developers on linux</title>
   <link href="http://johnathanmarksmith.com/linux/java/jboss/as7/2013/05/13/basic-install-of-jboss-for-developers-on-linux"/>
   <updated>2013-05-13T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/java/jboss/as7/2013/05/13/basic-install-of-jboss-for-developers-on-linux</id>
   <content type="html">&lt;p&gt;Below is a quick and easy way to install JBoss on linux for a developer to test and learn how to use it.  &lt;/p&gt;

&lt;p&gt;Please don’t use this setup for production.&lt;/p&gt;

&lt;h3 id=&quot;download-jboss-eap6-as711final-and-untar&quot;&gt;Download JBoss EAP6 (AS7.1.1.Final) and untar&lt;/h3&gt;

&lt;p&gt;To download and untar jboss you need to enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; wget http://download.jboss.org/jbossas/7.1/jboss-as-7.1.1.Final/jboss-as-7.1.1.Final.tar.gz
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; tar -zxvf jboss-as-7.1.1.Final.tar.gz&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;start-up-jboss-in-standalone-mode&quot;&gt;Start Up JBoss in standalone mode&lt;/h3&gt;

&lt;p&gt;Now that you have jboss untar on your linux box its time to start it in standalone mode. Just enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jboss-as-7.1.1.Final/bin
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ./standalone.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The output should look something like the one below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;

  JBoss Bootstrap Environment

  JBOSS_HOME: /home/jsmith/jboss-as-7.1.1.Final

  JAVA: java

  JAVA_OPTS:  -server -XX:+UseCompressedOops -XX:+TieredCompilation -Xms64m -Xmx512m -XX:MaxPermSize&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;256m -Djava.net.preferIPv4Stack&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Dorg.jboss.resolver.warning&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Dsun.rmi.dgc.client.gcInterval&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3600000&lt;/span&gt; -Dsun.rmi.dgc.server.gcInterval&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;3600000&lt;/span&gt; -Djboss.modules.system.pkgs&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;org.jboss.byteman -Djava.awt.headless&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; -Djboss.server.default.config&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;standalone.xml

&lt;span class=&quot;o&quot;&gt;=========================================================================&lt;/span&gt;

14:10:26,029 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.modules&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBoss Modules version 1.1.1.GA
14:10:26,250 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.msc&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBoss MSC version 1.0.2.GA
14:10:26,312 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBAS015899: JBoss AS 7.1.1.Final &lt;span class=&quot;s2&quot;&gt;&amp;quot;Brontes&amp;quot;&lt;/span&gt; starting
14:10:27,440 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.xnio&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; XNIO Version 3.0.3.GA
14:10:27,457 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBAS015888: Creating http management service using socket-binding &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;management-http&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
14:10:27,465 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.xnio.nio&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; XNIO NIO Implementation Version 3.0.3.GA
14:10:27,485 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.remoting&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBoss Remoting version 3.2.3.GA
14:10:27,548 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.logging&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; JBAS011502: Removing bootstrap log handlers
14:10:27,557 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.configadmin&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 26&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS016200: Activating ConfigAdmin Subsystem
14:10:27,587 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.clustering.infinispan&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 31&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS010280: Activating Infinispan subsystem.
14:10:27,682 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS010408: Starting JCA Subsystem &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;JBoss IronJacamar 1.0.9.Final&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
14:10:27,689 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.naming&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 38&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS011800: Activating Naming Subsystem
14:10:27,720 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.osgi&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 39&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS011940: Activating OSGi Subsystem
14:10:27,735 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.security&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 44&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS013101: Activating Security Subsystem
14:10:27,750 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.subsystems.datasources&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 27&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS010403: Deploying JDBC-compliant driver class org.h2.Driver &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;version 1.3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
14:10:27,776 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.security&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS013100: Current PicketBox &lt;span class=&quot;nv&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;4.0.7.Final
14:10:27,840 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.webservices&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ServerService Thread Pool -- 48&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS015537: Activating WebServices Extension
14:10:27,871 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.naming&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS011802: Starting Naming Service
14:10:27,924 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.mail.extension&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS015400: Bound mail session &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:jboss/mail/Default&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
14:10:28,183 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.ws.common.management.AbstractServerConfig&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBoss Web Services - Stack CXF Server 4.0.2.GA
14:10:28,272 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.apache.coyote.http11.Http11Protocol&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Starting Coyote HTTP/1.1 on http--127.0.0.1-8080
14:10:28,746 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.remoting&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS017100: Listening on /127.0.0.1:4447
14:10:28,749 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.remoting&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS017100: Listening on /127.0.0.1:9999
14:10:28,754 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.server.deployment.scanner&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS015012: Started FileSystemDeploymentService &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; directory /home/jsmith/jboss-as-7.1.1.Final/standalone/deployments
14:10:28,896 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as.connector.subsystems.datasources&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MSC service thread 1-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS010400: Bound data &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;java:jboss/datasources/ExampleDS&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
14:10:29,026 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS015951: Admin console listening on http://127.0.0.1:9990
14:10:29,027 INFO  &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;org.jboss.as&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Controller Boot Thread&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; JBAS015874: JBoss AS 7.1.1.Final &lt;span class=&quot;s2&quot;&gt;&amp;quot;Brontes&amp;quot;&lt;/span&gt; started in 3281ms - Started &lt;span class=&quot;m&quot;&gt;133&lt;/span&gt; of &lt;span class=&quot;m&quot;&gt;208&lt;/span&gt; services &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;74&lt;/span&gt; services are passive or on-demand&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;add-the-admin&quot;&gt;Add the admin&lt;/h3&gt;

&lt;p&gt;Now it’s time to setup the admin account for jboss. Open a new console and follow the following steps. I am going to make the username “admin” and the password “jboss” but you can use any username and password you would like, follow the commands below&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;jboss-as-7.1.1.Final/bin
./add-user.sh&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Your output should look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;What &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;of user &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; you wish to add? 
 a&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Management User &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;mgmt-users.properties&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
 b&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Application User &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;application-users.properties&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;a&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: 

Enter the details of the new user to add.
Realm &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ManagementRealm&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; : 
Username : admin
Password : 
Re-enter Password : 
The username &lt;span class=&quot;s1&quot;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt; is easy to guess
Are you sure you want to add user &lt;span class=&quot;s1&quot;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt; yes/no? yes
About to add user &lt;span class=&quot;s1&quot;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; realm &lt;span class=&quot;s1&quot;&gt;&amp;#39;ManagementRealm&amp;#39;&lt;/span&gt;
Is this correct yes/no? yes&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;jboss-is-up-and-running&quot;&gt;JBoss is up and running.&lt;/h3&gt;

&lt;p&gt;Ok that is the basic install of jboss as a standalone for a developer to use.  Now launch your browser to http://127.0.0.1:8080 or http://localhost:8080 and if anything was done righ your output should look like the one below:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;/images/jboss.jpg&quot; alt=&quot;Installing Jboss on Linux with Johnathan Mark Smith&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Here is the video if you would like to watch it:&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/mDMbRRtNBZg?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/mDMbRRtNBZg?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to load MySQL Database from Command Line in Linux</title>
   <link href="http://johnathanmarksmith.com/mysql/linux/database/2013/05/03/how-to-load-mysql-database-from-command-line-in-linux"/>
   <updated>2013-05-03T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/mysql/linux/database/2013/05/03/how-to-load-mysql-database-from-command-line-in-linux</id>
   <content type="html">&lt;p&gt;I been getting asked, How can I load my MySQL database from the command line? &lt;/p&gt;

&lt;p&gt;So I am going to make this quick and easy…&lt;/p&gt;

&lt;p&gt;First cd in the folder where your sql file is, for this demo I am using a file called “backup.mysql”. Then use the following command&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;mysql --user root --password regandb &amp;lt; backup.mysql&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;MySQL will prompt you for a password then your mysql will be loaded depending on how big your backup/file is it may take some time. You could add a -f flag if your database is very big, it will prevent it from stopping if there is error. &lt;/p&gt;

&lt;p&gt;ITS THAT EASY!!! :)&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Working with Git stash, Stashing Your Changes</title>
   <link href="http://johnathanmarksmith.com/git/programming/2013/05/01/working-with-git-stash-stashing-your-changes"/>
   <updated>2013-05-01T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/programming/2013/05/01/working-with-git-stash-stashing-your-changes</id>
   <content type="html">&lt;p&gt;Stashing is a great way to pause what you’re currently working on and come back to it later. For example, if you working on that awesome, brand new feature but someone just found a bug that you need to fix. Add your changes to the index using&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git add .
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or add individual files to the index, your pick. Stash your changes away with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And boom! You’re back to your original working state. Got that bug fixed? Bring your work back with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also do multiple layers of stashes, so make sure to use&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To check out all of your current ones. If you need to apply a stash from deeper in the stack, that’s easy too. Here’s how to apply the second stash you’ve got:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash apply stash@{1}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can also easily apply the top stash on the stack by using:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;A note with this command, it deletes that stash for good, while apply does not. You can manually delete stashes with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash drop &amp;lt;id&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or delete all of the stored stashes with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git stash clear
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Kiss MySQL goodbye for development and say hello to HSQLDB</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/mysql/hsqldb/databse/spring%20java%20configuration/2013/04/30/kiss-mysql-goodbye-for-development-and-say-hello-to-hsqldb"/>
   <updated>2013-04-30T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/mysql/hsqldb/databse/spring%20java%20configuration/2013/04/30/kiss-mysql-goodbye-for-development-and-say-hello-to-hsqldb</id>
   <content type="html">&lt;p&gt;The days of using MySQL, DB2, PostgreSQL etc for development is over.. I don’t know why any programmer would be developing using them..&lt;/p&gt;

&lt;p&gt;Every deveroper should be running some in memory database like HSQLDB as part of the project for development and testing then move the a full size database for unit testing, staging and production.&lt;/p&gt;

&lt;p&gt;This is a sample Spring Project to show how to use JavaConfig and HSQLDB. This example also will show how to use @PropertySource for reading properties and using the Environment Object to add properties to your objects.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-spring-javaconfig-and-not-xml-files-for-configuation&quot;&gt;How to use Spring JavaConfig and not XML files for configuation&lt;/h3&gt;

&lt;p&gt;Consider replacing Spring XML configuration with JavaConfig&lt;/p&gt;

&lt;p&gt;Using Spring XML configuration is so 2000’s the time has come to push the XML away and look at JavaConfig.&lt;/p&gt;

&lt;p&gt;Here is the main code to my sample project&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public class Main
{

    private static final Logger LOGGER = getLogger(Main.class);

    public static void main(String[] args)
    {
        // in this setup, both the main(String[]) method and the JUnit method both specify that
        ApplicationContext context = new AnnotationConfigApplicationContext( DatabaseConfiguration.class );

        MessageService mService = context.getBean(MessageService.class);

        /**
         *   Saving Message to database
         */
        Message message = new Message();
        message.setMessage(&quot;Hello World&quot;);
        mService.SaveMessage(message);


        /**
         * Saving 2nd Message in database.
         */
        message.setMessage(&quot;I love NYC&quot;);
        mService.SaveMessage(message);

        /**
         * Getting messages from database
         *    - display number of message(s)
         *    - display each message in database
         */
        List&amp;lt;Message&amp;gt; myList = mService.listMessages();
        LOGGER.debug(&quot;You Have &quot; + myList.size() + &quot; Message(s) In The Database&quot;);

        for (Message i : myList)
        {
            LOGGER.debug(&quot;Message: ID: &quot; + i.getId() + &quot;, Message: &quot; + i.getMessage() + &quot;.&quot;);
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets take a look at how I setup the database in JavaConfig and not in a XML file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;@Configuration
@EnableTransactionManagement
@ComponentScan(basePackageClasses = {Main.class})
@PropertySource(&quot;classpath:application.properties&quot;)
public class DatabaseConfiguration
{


@Bean
public DataSourceInitializer dataSourceInitializer(DataSource dataSource) {
    ResourceDatabasePopulator resourceDatabasePopulator = new ResourceDatabasePopulator();
    resourceDatabasePopulator.addScript(new ClassPathResource(&quot;/schema.sql&quot;));

        DataSourceInitializer dataSourceInitializer = new DataSourceInitializer();
        dataSourceInitializer.setDataSource(dataSource);
        dataSourceInitializer.setDatabasePopulator(resourceDatabasePopulator);
        return dataSourceInitializer;
    }

    @Bean
    public DataSource hsqlDataSource() {
        BasicDataSource basicDataSource = new BasicDataSource();
        basicDataSource.setDriverClassName(org.hsqldb.jdbcDriver.class.getName());
        basicDataSource.setUsername(&quot;sa&quot;);
        basicDataSource.setPassword(&quot;&quot;);
        basicDataSource.setUrl(&quot;jdbc:hsqldb:mem:mydb&quot;);
        return basicDataSource;
    }

    @Bean
    public LocalSessionFactoryBean sessionFactory(Environment environment,
                                              DataSource dataSource) {

        String packageOfModelBeans = Message.class.getPackage().getName();
        LocalSessionFactoryBean factoryBean = new LocalSessionFactoryBean();
        factoryBean.setDataSource(dataSource);
        factoryBean.setHibernateProperties(buildHibernateProperties(environment));
        factoryBean.setPackagesToScan(packageOfModelBeans);
        return factoryBean;
    }

    protected Properties buildHibernateProperties(Environment env) {
        Properties hibernateProperties = new Properties();

        hibernateProperties.setProperty(&quot;hibernate.dialect&quot;, env.getProperty(&quot;hibernate.dialect&quot;));
        hibernateProperties.setProperty(&quot;hibernate.show_sql&quot;, env.getProperty(&quot;hibernate.show_sql&quot;));
        hibernateProperties.setProperty(&quot;hibernate.use_sql_comments&quot;, env.getProperty(&quot;hibernate.use_sql_comments&quot;));
        hibernateProperties.setProperty(&quot;hibernate.format_sql&quot;, env.getProperty(&quot;hibernate.format_sql&quot;));
        hibernateProperties.setProperty(&quot;hibernate.hbm2ddl.auto&quot;, env.getProperty(&quot;hibernate.hbm2ddl.auto&quot;));

        hibernateProperties.setProperty(&quot;hibernate.generate_statistics&quot;, env.getProperty(&quot;hibernate.generate_statistics&quot;));

        hibernateProperties.setProperty(&quot;javax.persistence.validation.mode&quot;, env.getProperty(&quot;javax.persistence.validation.mode&quot;));

        //Audit History flags
        hibernateProperties.setProperty(&quot;org.hibernate.envers.store_data_at_delete&quot;, env.getProperty(&quot;org.hibernate.envers.store_data_at_delete&quot;));
        hibernateProperties.setProperty(&quot;org.hibernate.envers.global_with_modified_flag&quot;, env.getProperty(&quot;org.hibernate.envers.global_with_modified_flag&quot;));

        return hibernateProperties;
    }

    @Bean
    public HibernateTransactionManager hibernateTransactionManager(SessionFactory sessionFactory) {
        return new HibernateTransactionManager(sessionFactory);
    }


}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see how easy it is to use JavaConfig and Not XML.. The time of using XML files with Springs is over…&lt;/p&gt;

&lt;h3 id=&quot;down-and-run-project&quot;&gt;Down and Run Project&lt;/h3&gt;

&lt;p&gt;If you would like to download the project from GitHub and run it just follow the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:JohnathanMarkSmith/NoMySQL.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;NoMySQL
mvn package
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target
java -jar NoMySQL.jar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats it and you should see the following line on the console:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;2013-04-30 10:47:17,790 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - You Have 2 Message(s) In The Database
2013-04-30 10:47:17,790 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - Message: ID: 1, Message: Hello World.
2013-04-30 10:47:17,790 [main] DEBUG com.johnathanmarksmith.noMySQL.Main - Message: ID: 2, Message: I love NYC.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This Project is using Java, Spring, Hibernate, Maven, jUnit, Log4J, HSQLDB and Github.&lt;/p&gt;

&lt;p&gt;LIFE IS SO EASY WORKING WITH GIT, MAVEN, SPRING….&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to use Spring JavaConfig and not XML files for configuation</title>
   <link href="http://johnathanmarksmith.com/spring/java/javaconfig/programming/2013/04/25/how-to-use-spring-javaconfig-and-not-xml-files-for-configuation"/>
   <updated>2013-04-25T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/javaconfig/programming/2013/04/25/how-to-use-spring-javaconfig-and-not-xml-files-for-configuation</id>
   <content type="html">&lt;p&gt;Consider replacing Spring XML configuration with JavaConfig&lt;/p&gt;

&lt;p&gt;Using Spring XML configuration is so 2000’s the time has come to push the XML away and look at JavaConfig.&lt;/p&gt;

&lt;p&gt;Here is the main code to my sample project&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;public class Main
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    private static final Logger &lt;span class=&quot;nv&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; getLogger&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Main.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    public static void main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; args&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        // in this setup, both the main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;String&lt;span class=&quot;o&quot;&gt;[])&lt;/span&gt; method and the JUnit method both specify that
        ApplicationContext &lt;span class=&quot;nv&quot;&gt;context&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new AnnotationConfigApplicationContext&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; HelloWorldConfiguration.class &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        MessageService &lt;span class=&quot;nv&quot;&gt;mService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; context.getBean&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MessageService.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        HelloWorld &lt;span class=&quot;nv&quot;&gt;helloWorld&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; context.getBean&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HelloWorld.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Displaying default messgae
         */
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message from HelloWorld Bean: &amp;quot;&lt;/span&gt; + helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         *   Saving Message to database
         */
        Message &lt;span class=&quot;nv&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new Message&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        message.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        mService.SaveMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Settting new message in bean
         */
        helloWorld.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;I am in Staten Island, New York&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message from HelloWorld Bean: &amp;quot;&lt;/span&gt; + helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Saving Message in database.
         */
        message.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;helloWorld.getMessage&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        mService.SaveMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        /**
         * Getting messages from database
         *    - display number of message&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
         *    - display each message in database
         */
        List&amp;lt;Message&amp;gt; &lt;span class=&quot;nv&quot;&gt;myList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; mService.listMessages&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;You Have &amp;quot;&lt;/span&gt; + myList.size&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot; Message(s) In The Database&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Message i : myList&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            LOGGER.debug&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Message: ID: &amp;quot;&lt;/span&gt; + i.getId&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot;, Message: &amp;quot;&lt;/span&gt; + i.getMessage&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; + &lt;span class=&quot;s2&quot;&gt;&amp;quot;.&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see from this code that the ApplicationContext is mapped to a HelloWorldConfig.class file its not using a XML file.  Below is the code to the HelloWorldConfig.class.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;/**
 * Date:   4/25/13 / 9:37 AM
 * Author: Johnathan Mark Smith
 * Email:  john@johnathanmarksmith.com
 * &amp;lt;p/&amp;gt;
 * Comments:
 *    This is the config example of how to use JavaConfig and not XML Files:
 *
 *    This Would be the same as the following
 *    &amp;lt;beans&amp;gt;
 *       &amp;lt;bean &lt;span class=&quot;nv&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;helloWorld&amp;quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;com.johnathanmarksmith.HelloSpringJavaBasedJavaConfig.bean.HelloWorld&amp;quot;&lt;/span&gt; /&amp;gt;
 *    &amp;lt;/beans&amp;gt;
 *
 */

@Configuration
@Import&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DatabaseConfiguration.class&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
@ComponentScan
@PropertySource&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;classpath:application.properties&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
public class HelloWorldConfiguration &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    @Bean
    public HelloWorld getHelloWorld&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Environment env&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        HelloWorld &lt;span class=&quot;nv&quot;&gt;hw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; new HelloWorld&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        hw.setMessage&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;env.getProperty&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;bean.text&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; hw&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can see how easy it is to use JavaConfig and Not XML.. &lt;/p&gt;

&lt;p&gt;You can download the source code to this at my github project. 
&lt;a href=&quot;https://github.com/JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig&quot;&gt;https://github.com/JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Now that’s it. have fun with Spring JavaConfig. &lt;/p&gt;

&lt;h3 id=&quot;down-and-run-project&quot;&gt;Down and Run Project&lt;/h3&gt;

&lt;p&gt;If you would like to download the project from GitHub and run it just follow the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone git@github.com:JohnathanMarkSmith/HelloSpringJavaBasedJavaConfig.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;HelloSpringJavaBasedJavaConfig
mvn packge
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target
java -jar HelloSpringJavaBasedJavaConfig.jar&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;LIFE IS SO EASY WORKING WITH GIT, MAVEN, SPRING….&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/cfTY4LpZtf4?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/cfTY4LpZtf4?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install MySQL on Fedora, CentOS, Red Hat and Scientific Linux</title>
   <link href="http://johnathanmarksmith.com/linux/mysql/2013/04/24/how-to-install-mysql-on-fedora-centos-red-hat-and-scientific-linux"/>
   <updated>2013-04-24T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/mysql/2013/04/24/how-to-install-mysql-on-fedora-centos-red-hat-and-scientific-linux</id>
   <content type="html">&lt;p&gt;If you are using Fedora, CentOS, Red Hat or Scientific Linux I am going to show you the basic install of MySQL using yum.&lt;/p&gt;

&lt;h3 id=&quot;install-mysql-client-and-server-software&quot;&gt;Install MySQL Client and Server software&lt;/h3&gt;

&lt;p&gt;To install MySQL Client and Server enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# yum groupinstall &amp;quot;MySQL Database server&amp;quot;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# yum groupinstall &amp;quot;MySQL Database client&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;to-install-mysql-system-tables-and-setup-mysql-to-start-on-boot&quot;&gt;To install MySQL system tables and Setup MySQL to start on boot&lt;/h3&gt;

&lt;p&gt;To install the MySQL system tables and setup MySQL to start on boot you need to enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# /usr/bin/mysql_install_db --user=mysql&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# chkconfig --level 2345 mysqld on; service mysqld start&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;set-admin-password&quot;&gt;Set Admin Password&lt;/h3&gt;

&lt;p&gt;To set the admin password for the MySQL databse you need to  enter the following commands:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# /usr/bin/mysqladmin -u root password &amp;#39;new-password&amp;#39;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# /usr/bin/mysqladmin -u root -h regan password &amp;#39;new-password&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with MySQL.&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/RFbrw0HivUo?version=3&amp;amp;hl=en_US&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/RFbrw0HivUo?version=3&amp;amp;hl=en_US&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to see the last time a developer commited work and also the number of commits your developer made in your Git repository</title>
   <link href="http://johnathanmarksmith.com/linux/git/2013/04/23/how-to-see-the-last-time-a-developer-commited-work-and-also-the-number-of-commits-your-developer-made-in-your-git-repository"/>
   <updated>2013-04-23T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/git/2013/04/23/how-to-see-the-last-time-a-developer-commited-work-and-also-the-number-of-commits-your-developer-made-in-your-git-repository</id>
   <content type="html">&lt;p&gt;How would you like to check-up on your developers and see that last time your developers commited work to your Git repository.  I do this all the time to check on the developers on my projects. &lt;/p&gt;

&lt;p&gt;The best way to see who is commiting work to your Git repository and the last time is easy.  Just go into one of your Git repositories and type the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git shortlog -sne &lt;span class=&quot;p&quot;&gt;|&lt;/span&gt;awk &lt;span class=&quot;s1&quot;&gt;&amp;#39;{print $1,$2,$3,system(&amp;quot;git log -n1 --format=%cd --author=&amp;quot; $2)}&amp;#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and your output should look like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Wed Apr &lt;span class=&quot;m&quot;&gt;10&lt;/span&gt; 11:35:41 &lt;span class=&quot;m&quot;&gt;2013&lt;/span&gt; -0400
&lt;span class=&quot;m&quot;&gt;3&lt;/span&gt; Johnathan Smith 0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will show you who is doing all the work and the last time work was commited….. &lt;/p&gt;

&lt;p&gt;Now that’s it. have fun with Git. &lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to see the number of commits your developers made in your Git repository</title>
   <link href="http://johnathanmarksmith.com/linux/git/2013/04/22/how-to-see-the-number-of-commits-your-developers-made-in-your-git-repository"/>
   <updated>2013-04-22T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/git/2013/04/22/how-to-see-the-number-of-commits-your-developers-made-in-your-git-repository</id>
   <content type="html">&lt;p&gt;It looks like everyone is starting to use Git for version control and I get asked from managers “How can I check who is commiting work and doing all the work?”&lt;/p&gt;

&lt;p&gt;The best way to see who is commiting work to your Git repository is easy.  Just go into one of your Git repositories and type the following:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git shortlog -s -n -e --all&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;and your output should look like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;10	Johnathan Smith &amp;lt;johnathansmith1969@gmail.com&amp;gt;
    10	Yuya Saito &amp;lt;studiomohawk@gmail.com&amp;gt;
     4	Andrea Schiavini &amp;lt;andrea.schiavini@gmail.com&amp;gt;
     3	Anton Vattay &amp;lt;3martini@gmail.com&amp;gt;
     2	Abhijeet Kumar &amp;lt;abhijeet.kumar.ak@gmail.com&amp;gt;
     2	David Joos &amp;lt;david.joos@gmail.com&amp;gt;
     2	Laura Cabrera &amp;lt;lzcabrera@gmail.com&amp;gt;
     2	jayraj &amp;lt;jogjayr@gmail.com&amp;gt;
     1	Adam Kerney &amp;lt;adam.w.kerney@gmail.com&amp;gt;
     1	Alessio Caiazza &amp;lt;nolith@abisso.org&amp;gt;
     1	Alistair Hutchison &amp;lt;github@alistairh.co.uk&amp;gt;
     1	Andrew Kraut &amp;lt;akraut@gmail.com&amp;gt;
     1	Brandon Philips &amp;lt;brandon@ifup.org&amp;gt;
     1	Darren Jeacocke &amp;lt;dazonic@me.com&amp;gt;
     1	Hong Xu &amp;lt;xuhdev@gmail.com&amp;gt;
     1	Ian Li &amp;lt;i@techotaku.net&amp;gt;
     1	James Fleeting &amp;lt;twofivethreetwo@gmail.com&amp;gt;
     1	Jeff Kuchta &amp;lt;jkuchta@gmail.com&amp;gt;
     1	Jesse Chan-Norris &amp;lt;jcn@pith.org&amp;gt;
     1	Kori Roys &amp;lt;kori@koriroys.com&amp;gt;
     1	Liu Lantao &amp;lt;liulantao@gmail.com&amp;gt;
     1	Loren Sands-Ramshaw &amp;lt;lorensr@gmail.com&amp;gt;
     1	Lukas Knuth &amp;lt;mr.luke.187@googlemail.com&amp;gt;
     1	Marko Bauhardt &amp;lt;marko.bauhardt@googlemail.com&amp;gt;
     1	Martijn Pieters &amp;lt;mj@zopatista.com&amp;gt;
     1	Matt Swanson &amp;lt;mdswanson@sep.com&amp;gt;
     1	Michael-Keith Bernard &amp;lt;mkbernard.dev@gmail.com&amp;gt;
     1	Pradeep Nayak &amp;lt;pradeep1288@gmail.com&amp;gt;
     1	Simon Starr &amp;lt;simon@starr.cx&amp;gt;
     1	Stephen Ball &amp;lt;sdball@gmail.com&amp;gt;
     1	Tommaso Visconti &amp;lt;tommaso.visconti@gmail.com&amp;gt;
     1	Victor Widell &amp;lt;victor@topmost.se&amp;gt;
     1	christine &amp;lt;piroko@gmail.com&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will show you who is doing all the work….. &lt;/p&gt;

&lt;p&gt;Now that’s it. have fun with Git. &lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Apache2 and PHP on Fedora, CentOS, Red Hat and Scientific Linux</title>
   <link href="http://johnathanmarksmith.com/linux/apache/php/2013/04/19/how-to-install-apache2-and-php-on-fedora-centos-red-hat-and-scientific-linux"/>
   <updated>2013-04-19T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/apache/php/2013/04/19/how-to-install-apache2-and-php-on-fedora-centos-red-hat-and-scientific-linux</id>
   <content type="html">&lt;p&gt;If you are using Fedora, CentOS, Red Hat or Scientific Linux I am going to show you the basic install of Apache2 and PHP using yum.&lt;/p&gt;

&lt;h3 id=&quot;install-apache2&quot;&gt;Install Apache2.&lt;/h3&gt;

&lt;p&gt;To install Apache2 just enter the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install httpd&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;install-php&quot;&gt;Install PHP&lt;/h3&gt;

&lt;p&gt;To install PHP just enter the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;yum install php&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;start-up-apache2&quot;&gt;Start up Apache2&lt;/h3&gt;

&lt;p&gt;The following command is going to setup Apache and set it up to start everytime your workstation or server books.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;chkconfig --level &lt;span class=&quot;m&quot;&gt;2345&lt;/span&gt; httpd on&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; service httpd start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;test-your-install&quot;&gt;Test Your Install&lt;/h3&gt;

&lt;p&gt;Now its time to test your install of Apache2 and PHP, To Do this we are going to make a small PHP file and run in from your brower.&lt;/p&gt;

&lt;p&gt;The following command will create and index.php file with the PHPInfo command in it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; “&amp;lt;?php phpinfo&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; ?&amp;gt;” &amp;gt; /var/www/html/index.php&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now launch your browser to http://127.0.0.1 or http://localhost if anything was done righ your output should look like the one below:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;
&lt;img src=&quot;/images/php.jpg&quot; alt=&quot;Install Apache2 and PHP with Johnathan Mark Smith&quot; /&gt;
&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with Apache2 and PHP. &lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Maven on Fedora, CentOS, Red Hat and Scientific Linux</title>
   <link href="http://johnathanmarksmith.com/linux/java/maven/programming/project%20management/2013/04/18/how-to-install-maven-on-fedora-centos-red-hat-and-scientific-linux"/>
   <updated>2013-04-18T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/java/maven/programming/project%20management/2013/04/18/how-to-install-maven-on-fedora-centos-red-hat-and-scientific-linux</id>
   <content type="html">&lt;p&gt;If you are using Fedora, CentOS, Red Hat or Scientific Linux sometimes yum does not have the package for the product you would like to install and Maven is one of them at the time of me writing this blog.&lt;/p&gt;

&lt;p&gt;I am going to show you how I install Maven on Fedora, CentOS, Red Hat or Scientific Linux you can do it the same way or find a better way.&lt;/p&gt;

&lt;h3 id=&quot;download-maven-and-untar-it&quot;&gt;Download Maven and untar it.&lt;/h3&gt;

&lt;p&gt;The first thing we need to do is to download the Maven tar file and untar it to a shared location on the workstation&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://mirrors.gigenet.com/apache/maven/maven-3/3.0.5/binaries/apache-maven-3.0.5-bin.tar.gz
su -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;tar -zxvf apache-maven-3.0.5-bin.tar.gz -C /opt/&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;setup-the-maven-environment-variables-in-shared-profile&quot;&gt;Setup the Maven Environment Variables in shared profile.&lt;/h3&gt;

&lt;p&gt;The next step is to setup the Maven environment variables in a shared profile so all users on the system will get them import at login time.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;su -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;vi /etc/profile.d/maven.sh&amp;quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Add the following lines to maven.sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2_HOME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/apache-maven-3.0.5
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;M2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2_HOME&lt;/span&gt;/bin
&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$M2&lt;/span&gt;:&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;now-test-your-install-of-maven&quot;&gt;Now test your install of Maven.&lt;/h3&gt;

&lt;p&gt;Logout of the system and then log back into it. Enter the following command:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;jsmith@regan ~&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mvn -version&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If you did everything right your output should look something like the one below:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Apache Maven 3.0.5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;r01de14724cdef164cd33c7c8c2fe155faf9602da&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 2013-02-19 08:51:28-0500&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Maven home: /opt/apache-maven-3.0.5
Java version: 1.7.0_19, vendor: Oracle Corporation
Java home: /usr/lib/jvm/java-1.7.0-openjdk-1.7.0.19/jre
Default locale: en_US, platform encoding: UTF-8
OS name: &lt;span class=&quot;s2&quot;&gt;&amp;quot;linux&amp;quot;&lt;/span&gt;, version: &lt;span class=&quot;s2&quot;&gt;&amp;quot;2.6.32-358.2.1.el6.i686&amp;quot;&lt;/span&gt;, arch: &lt;span class=&quot;s2&quot;&gt;&amp;quot;i386&amp;quot;&lt;/span&gt;, family: &lt;span class=&quot;s2&quot;&gt;&amp;quot;unix&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that’s it. have fun with maven.&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/Rs1Y5-vqCx0?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/Rs1Y5-vqCx0?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to install Java Open JDK 1.7 on Fedora, CentOS, Red Hat and Scientific Linux</title>
   <link href="http://johnathanmarksmith.com/linux/java/2013/04/17/how-to-install-java-open-jdk-17-on-fedora-centos-red-hat-and-scientific-linux"/>
   <updated>2013-04-17T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/linux/java/2013/04/17/how-to-install-java-open-jdk-17-on-fedora-centos-red-hat-and-scientific-linux</id>
   <content type="html">&lt;p&gt;I had to install Java Open JDK 1.7 and SDK on a number of linux boxs last night.  &lt;/p&gt;

&lt;p&gt;I had some coworkers asking the same question time and time again “How Do I Install Java Open JDK 1.7?”. &lt;/p&gt;

&lt;p&gt;So to make it easy once again here is my post and the details on how to do it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;su -c &lt;span class=&quot;s2&quot;&gt;&amp;quot;yum install java-1.7.0-openjdk*&amp;quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats all you have to do… stop asking… :)&lt;/p&gt;

&lt;p&gt;Here is the video&lt;/p&gt;

&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/bZ7McZJZQ0o?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/bZ7McZJZQ0o?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Sounding Smart Gets You Credit</title>
   <link href="http://johnathanmarksmith.com/programming/jobs/2013/04/16/sounding-smart-gets-you-credit"/>
   <updated>2013-04-16T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/programming/jobs/2013/04/16/sounding-smart-gets-you-credit</id>
   <content type="html">&lt;p&gt;I don’t know what it is but I see it day in and day out. Someone reads a number of websites and learns some buzz words and everyone thinks wow he is so smart he is the best programmer we have.&lt;/p&gt;

&lt;p&gt;Learning all the buzz words and and speaking will is a key thing in the world today but I really feel that the fims have to start to look at the programmers then can develop good code and get good products out. Talking good is not going to get the job done. &lt;/p&gt;

&lt;p&gt;Think about it… Do you want someone that can really get your projects done on time and the right way or someone that can talk about it day in and day out.&lt;/p&gt;

&lt;p&gt;Hmm.. &lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>How to clone a local Git Repository</title>
   <link href="http://johnathanmarksmith.com/github/git/git%20interview%20question/2013/04/16/how-to-clone-a-local-git-repository"/>
   <updated>2013-04-16T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/github/git/git%20interview%20question/2013/04/16/how-to-clone-a-local-git-repository</id>
   <content type="html">&lt;p&gt;I get asked a good number of times “How do I clone a local Git Repository?”. So do make it easy I am going to pust it on my blog site so I can just follow the link to in.  are you ready??&lt;/p&gt;

&lt;p&gt;This worked for me:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone file:////&amp;lt;host&amp;gt;/&amp;lt;share&amp;gt;/&amp;lt;path&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For example, if your main machine has the IP 192.168.10.51 and the computer name main, and it has a share named code which itself is a git repository, the both of the following commands should work equally:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone file:////main/code
git clone file:////192.168.10.51/code&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If the git repository is in a subdirectory, simply append the path.&lt;/p&gt;

&lt;p&gt;You can see the full list of &lt;a href=&quot;/git-interview-questions.html&quot;&gt;Git Interview Questions Here&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you have any questions or comments please email me at &lt;a href=&quot;mailto:john@johnathanmarksmith.com&quot;&gt;john@johnathanmarksmith.com&lt;/a&gt;&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Mirroring a Git repostory</title>
   <link href="http://johnathanmarksmith.com/git/programming/github/2013/04/15/mirroring-a-git-repostory"/>
   <updated>2013-04-15T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/git/programming/github/2013/04/15/mirroring-a-git-repostory</id>
   <content type="html">&lt;p&gt;The firm I recently stated working at just moved to Git and I am the only resource then knows Git. I get asked so many times a day on how to mirror a git repostory.&lt;/p&gt;

&lt;p&gt;From the birds eyes very its very easy:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone --mirror git@git.com:project project
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;project
git remote add github git@github.com:username/project.git

In cron Job
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /pathto/project &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git fetch -q &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; git push -q --mirror github&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Thats how easy it is to mirror a Git Project on to GitHub&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Working with Spring WebFlow and Dojo by Johnathan Mark Smith</title>
   <link href="http://johnathanmarksmith.com/spring/java/webflow/2013/04/12/working-with-spring-webflow-and-dojo-by-johnathan-mark-smith"/>
   <updated>2013-04-12T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/webflow/2013/04/12/working-with-spring-webflow-and-dojo-by-johnathan-mark-smith</id>
   <content type="html">&lt;p&gt;Working with Spring WebFlow and Dojo by Johnathan Mark Smith
Johnathan Mark Smith will show you how to make your Spring WebFlow projects look better with Dojo.&lt;/p&gt;

&lt;p&gt;FOR IMMEDIATE RELEASE&lt;/p&gt;

&lt;p&gt;Working with Spring and Dojo by Johnathan Mark Smith&lt;/p&gt;

&lt;p&gt;In this video Johnathan Mark Smith will show you how to make better Spring WebFlow project just by adding Dojo with Dijit UI Library(widgets).  You will see how easy it is to add tooltips and a lot more to any Spring project.&lt;/p&gt;

&lt;p&gt;Or find Johnathan Mark Smith on Twitter @JohnathanMSmith&lt;/p&gt;

&lt;p&gt;The source code for this demo is at
https://github.com/JohnathanMarkSmith/SpringWithDojo&lt;/p&gt;

&lt;object width=&quot;420&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/UBPBJgwOzOw?hl=en_US&amp;amp;version=3&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/UBPBJgwOzOw?hl=en_US&amp;amp;version=3&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;420&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;

&lt;p&gt;Who is Johnathan Mark Smith:  I am the Chief Information Officer &amp;amp; Founder of StutteringTech and SINY-RealEstate and Our Consulting services has over 25 years experience, specializing in business technology in the areas of web application development and collaborative computing. We only use leading technologies such as Android, Springs, JSP’s, Servlets, XML, Java, Struts, PHP, LDAP and Web Application Servers. We have a very solid background with Java, OOP, Design-Patterns and Multi-Threading. We also have the able to interface with all levels of management.&lt;/p&gt;

&lt;p&gt;Please checkout my website for more tips, tricks and information..
johnathanmsmith.com&lt;/p&gt;

&lt;p&gt;http://www.youtube.com/watch?v=UBPBJgwOzOw&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Where is RequestMapping in Spring 3.2.1?</title>
   <link href="http://johnathanmarksmith.com/spring/java/2013/03/26/where-is-requestmapping-in-spring-321"/>
   <updated>2013-03-26T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/spring/java/2013/03/26/where-is-requestmapping-in-spring-321</id>
   <content type="html">&lt;p&gt;Where is RequestMapping in Spring 3.2.1?&lt;/p&gt;

&lt;p&gt;If you are using Spring 3.2.1-Release and Maven you maybe asking where is the Re
questMapping Object. The anwser its missing! is a issues in the release of Spri
ng 3.2.1 but has been fixed in Spring 3.2.2 that is coming out soon.&lt;/p&gt;

&lt;p&gt;If you can’t wait for the release to come out look at the details of the fix at
the following URL&lt;/p&gt;

&lt;p&gt;https://jira.springsource.org/browse/SPR-10218&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Tomcat vs WebSphere vs JBoss Application Servers by Johnathan Mark Smith</title>
   <link href="http://johnathanmarksmith.com/tomcat/websphere/jboss/2013/03/25/tomcat-vs-jboss"/>
   <updated>2013-03-25T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/tomcat/websphere/jboss/2013/03/25/tomcat-vs-jboss</id>
   <content type="html">&lt;p&gt;I don’t understand at all!  I am the Chief Information Officer &amp;amp; Founder of StutteringTech and SINY-RealEstate and Our Consulting services has over 22 years experience, specializing in business technology in the areas of web application development and collaborative computing. We only use leading technologies such as Android, Springs, JSP’s, Servlets, XML, Java, Struts, PHP, LDAP and Web Application Servers. We have a very solid background with Java, OOP, Design-Patterns and Multi-Threading. We also have the able to interface with all levels of management but why is it that firms also try to spend money on products and services that the firms dont need.&lt;/p&gt;

&lt;p&gt;JBoss Application Servers is nothing more then Apache Tomcat with some other open source projects, why pay for it? you tell me?  Most of the applications that I have seen over the years would run fine in Apache Tomcat so why is everyone spending money on WebSphere or JBoss Application Servers? Can someone please tell me?&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Why Did The Java Spring Consultant Post His Resume On GitHub.com</title>
   <link href="http://johnathanmarksmith.com/java/spring/consultant/github/2013/03/22/why-post-on-github"/>
   <updated>2013-03-22T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/java/spring/consultant/github/2013/03/22/why-post-on-github</id>
   <content type="html">&lt;p&gt;Let think about this, Why not use a public system like GitHub to post resumes and other documents that you would like to track or make public to others. GitHub can be used for so much more then just source code tracking. Think about it… any document you would like to track or share you can just GitHub and it does not have to be documents. You can keep workstation settings, scripts or anything in it. We need to stop thinking of GitHub if a web0bases hosting service for software development projects. You can make public and private repositories and put anything into them..&lt;/p&gt;

&lt;p&gt;I have over 24 years experience specializing in business technology in the areas of web application development and collaborative computing. I love working as an architect-developer for applications or product development. I am particularly interested in organizations that use leading technologies such as Git, Springs, WebFlow, Maven, JUnit, JSP’s, Servlets, XML, Java, Struts, PHP, LDAP, Android and Web Application Servers. I have a very solid background with Java, OOP, Design-Patterns and Multi-Threading.&lt;/p&gt;

&lt;p&gt;I am also able to interface with all levels of management and by posting my resume on GitHub.com at github.com/JohnathanSmith/resume in a number of formats I open the door to a number of organizations and recruiters looking for Java, Springs Consultants. I can now tell the organization or the recruiter to goto github.com/JohnathanSmith/resume and download my resume in the format the organization or recruiter is looking for.&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>The Move To GitHub</title>
   <link href="http://johnathanmarksmith.com/github/wordpress/2013/03/22/the-move-to--github"/>
   <updated>2013-03-22T00:00:00-07:00</updated>
   <id>http://johnathanmarksmith.com/github/wordpress/2013/03/22/the-move-to--github</id>
   <content type="html">&lt;p&gt;Today is the day that I said goodbye WordPress! Hello GitHub and moved my site to Github.  I love Git for version control so why not use it for web hosting..&lt;/p&gt;

</content>
 </entry>
 
 
</feed>